[{"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\index.js":"1","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\App.js":"2","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\store\\Store.js":"3","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\blog\\Blog.jsx":"4","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\shipping\\Shipping.jsx":"5","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\faq\\Faq.jsx":"6","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\home\\Home.jsx":"7","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\about\\About.jsx":"8","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\contact\\Contact.jsx":"9","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\footer\\Footer.js":"10","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\header\\Header.js":"11","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\notfound\\NotFound.jsx":"12","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\product\\Product.js":"13","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\new\\New.jsx":"14","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\featured\\Featured.jsx":"15","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Cart\\Cart.jsx":"16","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\dropdown\\Dropdown.jsx":"17","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\payment\\Payment.jsx":"18","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\newAccount\\NewAccount.jsx":"19","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\newAccount\\Newaccount.jsx":"20","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Paypal.jsx":"21","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Success\\Success.jsx":"22","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\WishList\\WishList.jsx":"23","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Fail\\Fail.jsx":"24","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Post\\Post.jsx":"25","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Dashboard.jsx":"26","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Signup.jsx":"27","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\PrivateRoute.jsx":"28","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\ForgotPassword.jsx":"29","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Login.jsx":"30","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\UpdateProfile.jsx":"31","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\firebase.js":"32","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\AuthContext.jsx":"33","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\Administrator.jsx":"34","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\posts.jsx":"35","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\product.js":"36","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\blog.js":"37","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Profile.jsx":"38","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\comment.js":"39","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\storeInfo.js":"40","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\faq.js":"41","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\shipping.js":"42","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\user.js":"43"},{"size":3329,"mtime":1628695530101,"results":"44","hashOfConfig":"45"},{"size":280,"mtime":1617793607101,"results":"46","hashOfConfig":"45"},{"size":17989,"mtime":1628695621931,"results":"47","hashOfConfig":"45"},{"size":1161,"mtime":1626782644094,"results":"48","hashOfConfig":"45"},{"size":3633,"mtime":1618153147225,"results":"49","hashOfConfig":"45"},{"size":960,"mtime":1618144515921,"results":"50","hashOfConfig":"45"},{"size":416,"mtime":1612450590276,"results":"51","hashOfConfig":"45"},{"size":1144,"mtime":1612465544196,"results":"52","hashOfConfig":"45"},{"size":4797,"mtime":1618157527309,"results":"53","hashOfConfig":"45"},{"size":1568,"mtime":1613908417793,"results":"54","hashOfConfig":"45"},{"size":3073,"mtime":1614447838481,"results":"55","hashOfConfig":"45"},{"size":428,"mtime":1612466245936,"results":"56","hashOfConfig":"45"},{"size":5847,"mtime":1628695773375,"results":"57","hashOfConfig":"45"},{"size":6465,"mtime":1612794644325,"results":"58","hashOfConfig":"45"},{"size":6502,"mtime":1612794718187,"results":"59","hashOfConfig":"45"},{"size":9535,"mtime":1628676419035,"results":"60","hashOfConfig":"45"},{"size":2408,"mtime":1613481382621,"results":"61","hashOfConfig":"45"},{"size":8679,"mtime":1628695742549,"results":"62","hashOfConfig":"45"},{"size":230,"mtime":1613130234883,"results":"63","hashOfConfig":"45"},{"size":9753,"mtime":1613549355401,"results":"64","hashOfConfig":"45"},{"size":1153,"mtime":1615479746560,"results":"65","hashOfConfig":"45"},{"size":495,"mtime":1628695797332,"results":"66","hashOfConfig":"45"},{"size":1805,"mtime":1615964205289,"results":"67","hashOfConfig":"45"},{"size":364,"mtime":1613466834334,"results":"68","hashOfConfig":"45"},{"size":4816,"mtime":1628695612580,"results":"69","hashOfConfig":"45"},{"size":2408,"mtime":1628695536770,"results":"70","hashOfConfig":"45"},{"size":6917,"mtime":1618159358672,"results":"71","hashOfConfig":"45"},{"size":718,"mtime":1618162867855,"results":"72","hashOfConfig":"45"},{"size":1972,"mtime":1614449453956,"results":"73","hashOfConfig":"45"},{"size":2597,"mtime":1618163392197,"results":"74","hashOfConfig":"45"},{"size":7742,"mtime":1628695550813,"results":"75","hashOfConfig":"45"},{"size":713,"mtime":1614842311709,"results":"76","hashOfConfig":"45"},{"size":1968,"mtime":1617964374192,"results":"77","hashOfConfig":"45"},{"size":1199,"mtime":1628695326691,"results":"78","hashOfConfig":"45"},{"size":485,"mtime":1614670992667,"results":"79","hashOfConfig":"45"},{"size":3344,"mtime":1617626416215,"results":"80","hashOfConfig":"45"},{"size":1428,"mtime":1615472521582,"results":"81","hashOfConfig":"45"},{"size":6079,"mtime":1628695545012,"results":"82","hashOfConfig":"45"},{"size":1283,"mtime":1617972869145,"results":"83","hashOfConfig":"45"},{"size":1925,"mtime":1618121462753,"results":"84","hashOfConfig":"45"},{"size":1022,"mtime":1618126612350,"results":"85","hashOfConfig":"45"},{"size":1313,"mtime":1618126624269,"results":"86","hashOfConfig":"45"},{"size":2051,"mtime":1628694550438,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},"navjt7",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"91"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"91"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"91"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"91"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"91"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"91"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"91"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"91"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"91"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"91"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"91"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"91"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"91"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"91"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\index.js",["194"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Header from './components/header/Header';\nimport App from './App';\nimport About from './components/about/About';\nimport Contact from './components/contact/Contact';\nimport NotFound from './components/notfound/NotFound';\nimport Footer from './components/footer/Footer';\nimport Store from './components/store/Store';\nimport Blog from './components/blog/Blog';\nimport Shipping from './components/shipping/Shipping'\nimport Faq from './components/faq/Faq'\nimport Product from './components/product/Product'\nimport Cart from './components/Cart/Cart';\nimport Payment from './components/payment/Payment';\nimport WishList from './components/WishList/WishList';\nimport Post from './components/Post/Post';\nimport { AuthProvider } from \"./AuthContext\";\nimport Signup from \"./components/Signup\";\nimport Dashboard from './components/Dashboard'\nimport Login from './components/Login'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport ForgotPassword from \"./components/ForgotPassword\";\nimport UpdateProfile from \"./components/UpdateProfile\";\nimport Administrator from './components/admin/Administrator';\nimport Profile from './components/Profile';\n\n\n\nlocalStorage.setItem(\"orderErr\",\"\")\nlocalStorage.setItem(\"orderId\",\"\")\n\nfunction setLocalStorage () {\n  if (localStorage.getItem(\"cart\") === undefined) {\n    localStorage.setItem(\"cart\",JSON.stringify([]))\n  }\n  if (localStorage.getItem(\"user\") === undefined) {\n    localStorage.setItem(\"user\",\"\")\n  }\n  if (localStorage.getItem(\"wishList\") === undefined) {\n    localStorage.setItem(\"wishList\",JSON.stringify([]))\n  }\n}\nsetLocalStorage()\n\nlet amount = 0;\nconst amountfunction = (amount) => {\n  let cart = JSON.parse(localStorage.getItem(\"cart\"))\n  return amount = cart.length\n\n} \nconsole.log(amount)\n\nconst router = (\n  <Router>\n    <AuthProvider>\n  <Header amount={amount}/>\n  <Switch>\n     <Route exact path=\"/\" component={App}/>\n     <Route path=\"/About\" component={About}/>\n     <Route path=\"/Contact\" component={Contact}/>\n     <Route exact path=\"/Store\" component={Store}/>\n     <Route exact path=\"/Store/New\" component={Store}/>\n     <Route exact path=\"/Store/Featured\" component={Store}/>\n     <Route exact path=\"/Blog\" component={Blog}/>\n     <Route path=\"/Shipping\" component={Shipping}/>\n     <Route path=\"/Faq\" component={Faq}/>\n     <Route path='/Admin' component={Administrator}/>\n     <Route path=\"/Product/:productid\" component={Product}/>\n     <Route exact path = \"/Cart\" component={Cart}/>\n     <Route exact path = \"/Payment\" component={Payment}/>\n     <Route exact path = \"/WishList\" component={WishList}/>\n     <Route exact path = \"/Post/:postid\" component={Post}/>\n     <PrivateRoute exact path=\"/Dashboard\" component={Dashboard}/>\n    <PrivateRoute exact path=\"/update-profile\" component={UpdateProfile}/>\n    <PrivateRoute exact path=\"/profile\" component={Profile}/>\n    <Route exact path='/signup' component={Signup}/>\n    <Route exact path='/login' component={Login}/>\n    <Route exact path='/forgot-password' component={ForgotPassword}/>\n     <Route component={NotFound}/>\n  </Switch>\n  <Footer/>\n  </AuthProvider>\n  </Router>\n)\n\nReactDOM.render(\n  router,\n  document.getElementById('root')\n);\n\n",["195","196"],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\App.js",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\store\\Store.js",["197","198","199","200"],"import React, { Component } from 'react';\r\nimport './Store.css';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst axios = require('axios').default;\r\n\r\n let product = []\r\n\r\nclass Store extends Component{\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      product: product,\r\n      display: product,\r\n      pages: [],\r\n      checked: [],\r\n      searchKey: \"\",\r\n      results: [],\r\n      filterDis: \"flex\",\r\n      storeDis: \"flex\",\r\n      errorDis: \"none\",\r\n      cart: JSON.parse(localStorage.getItem(\"cart\")),\r\n      addMsg: \"\",\r\n      wishList: JSON.parse(localStorage.getItem(\"wishList\")),\r\n    }\r\n    this.isChecked = this.isChecked.bind(this);\r\n    this.filter = this.filter.bind(this);\r\n    this.searchK = this.searchK.bind(this);\r\n    this.search = this.search.bind(this);\r\n    this.addToCart = this.addToCart.bind(this);\r\n    this.addToWish = this.addToWish.bind(this);\r\n    this.getStore = this.getStore.bind(this);\r\n    this.searchK()\r\n    this.newFeatured()\r\n      }\r\n\r\ncomponentWillMount () {\r\n  this.getStore()\r\n  \r\n}\r\n\r\nasync getStore() {\r\n  try {\r\n    await axios.get(`${process.env.REACT_APP_URL}/product/`)\r\n    .then((response) => {\r\n    let product = response.data;\r\n    console.log(product)\r\n    this.setState({product, display: product})\r\n    this.paginationSetup()\r\n    })\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n\r\n    addMsg () {\r\n      setTimeout(()=>{this.setState({addMsg: \"Item added to cart\"})},5)\r\n      setTimeout(()=>{this.setState({addMsg: \"\"})},10000)\r\n    }\r\n\r\n    addToCart (e) {\r\n      \r\n      let itemId = e.target.id\r\n      let quantity = e.target.previousElementSibling.value\r\n      let cart = [];\r\n      if (this.state.cart !== null) {\r\n        cart = [...this.state.cart]\r\n      }\r\n      let src = e.target.parentNode.parentNode.parentNode.childNodes[0].childNodes[0].src\r\n      let name = e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].innerText\r\n      let price = e.target.parentNode.parentNode.parentNode.parentNode.childNodes[2].childNodes[0].childNodes[1].innerText\r\n      price = price.substring(0, price.length-1)\r\n      let flag = true\r\n      if (cart.length > 0){\r\n         for (const element of cart) {\r\n            if (element.itemId === itemId) {\r\n               flag = false\r\n               let elQu = element.quantity\r\n               elQu = parseInt(elQu)\r\n               elQu = elQu + parseInt(quantity)\r\n               element.quantity = elQu\r\n            }\r\n         }\r\n      }\r\n      if (flag === true) {\r\n         let cartObj = {itemId: itemId, quantity: quantity, src: src, name: name, price: price}\r\n         cart.push(cartObj)\r\n      }\r\n      \r\n      setTimeout(()=>{this.setState({cart})\r\n      localStorage.setItem(\"cart\",JSON.stringify(cart));\r\n      this.addMsg();},5);\r\n      \r\n    }\r\n\r\n    addToWish (e) {\r\n      if (e.target.style.color !== 'red') {\r\n      e.target.style.color = 'red'\r\n      let itemId = e.target.id\r\n      let src = e.target.parentNode.parentNode.parentNode.childNodes[0].childNodes[0].src\r\n      let price = e.target.parentNode.parentNode.parentNode.parentNode.childNodes[2].childNodes[0].childNodes[1].innerText\r\n      price = price.substring(0, price.length-1)\r\n      let name = e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].innerText\r\n      let wishList = JSON.parse(localStorage.getItem(\"wishList\"))\r\n\r\n      let wishListObj = {itemId: itemId, src: src, name: name, price: price}\r\n      wishList.push(wishListObj)\r\n      setTimeout(()=>{this.setState({wishList})\r\n      localStorage.setItem(\"wishList\",JSON.stringify(wishList));},5);\r\n      }\r\n\r\n      else {\r\n        e.target.style.color = 'black'\r\n        let itemId = e.target.id\r\n        let wishList = JSON.parse(localStorage.getItem(\"wishList\"))\r\n        wishList = wishList.filter((v)=> {return v.itemId !== itemId})\r\n        setTimeout(()=>{this.setState({wishList})\r\n      localStorage.setItem(\"wishList\",JSON.stringify(wishList));},5);\r\n      }\r\n      \r\n      \r\n      \r\n    }\r\n\r\n    newFeatured () {\r\n      let path = this.props.location.pathname\r\n      path = path.substring(7);\r\n      if (path === 'New') {\r\n        this.state.product.sort((a, b) => b.date - a.date)\r\n      }\r\n      else if (path === 'Featured')\r\n      this.state.product.sort((a, b) => b.featured - a.featured)\r\n\r\n      else this.state.product.sort((a, b) => a.id - b.id)\r\n    }\r\n    \r\n    sort (e) {\r\n      let byPrice =  this.state.product\r\n      if (e.target.value === 'high')\r\n      byPrice.sort((a, b) => b.price - a.price);\r\n      else if (e.target.value === 'low')\r\n      byPrice.sort((a, b) => a.price - b.price);\r\n      this.setState({product: byPrice})\r\n    }\r\n\r\n    isChecked (e) {\r\n      this.search()\r\n      let checkbox = e.target.value\r\n      let checkedBox =[...this.state.checked]\r\n      if(e.target.checked){\r\n        checkedBox.push(checkbox)\r\n      }\r\n      else {\r\n        checkedBox = checkedBox.filter((v)=>{\r\n          return v !== checkbox\r\n        })\r\n      } \r\n      setTimeout(()=>{this.setState({checked: checkedBox})\r\n    this.setState({display: []});\r\n    this.filter(e)},5) \r\n    }\r\n\r\n    filter (e) {\r\n      let display = [...this.state.display];\r\n      let product = [...this.state.product]\r\n      let filterThat = [...this.state.product];\r\n      let filtered = [];\r\n      let name = e.target.name\r\n      let filterby = [...this.state.checked]\r\n      \r\n      if (name === 'category'){\r\n        for (let i = 0; i<filterby.length; i++){\r\n          filtered = filterThat.filter((v)=> {return v.category === filterby[i]}) \r\n          filtered.forEach(element => {display.push(element)});         \r\n        }\r\n      }\r\n      else if (name === 'brands'){\r\n        for (let i = 0; i<filterby.length; i++){\r\n          filtered = filterThat.filter((v)=> {return v.brand === filterby[i]}) \r\n          filtered.forEach(element => {display.push(element)});         \r\n        }\r\n      }\r\n      else if (name === 'color'){\r\n        for (let i = 0; i<filterby.length; i++){\r\n          filtered = filterThat.filter((v)=> {return v.color === filterby[i]}) \r\n          filtered.forEach(element => {display.push(element)});         \r\n        }\r\n      }\r\n      else if (name === 'priceRange'){\r\n        for (let i = 0; i<filterby.length; i++){\r\n          filtered = filterThat.filter((v)=> {return v.priceRange === filterby[i]}) \r\n          filtered.forEach(element => {display.push(element)});         \r\n        }\r\n      }\r\n      \r\n      if (display.length === 0 && this.state.searchKey === \"\") {\r\n        display = product\r\n      }\r\n      else if (display.length === 0 && this.state.searchKey !== \"\") {\r\n        \r\n        display = [...this.state.results]\r\n      }\r\n      setTimeout(()=>{\r\n        this.setState({display: display})\r\n      },5)\r\n    }\r\n\r\n    searchK () {\r\n      let searchKey = this.props.location.search\r\n      searchKey = searchKey.substring(3);\r\n      setTimeout(() => {\r\n        this.setState({searchKey: searchKey})\r\n        this.search()\r\n      }, 5);\r\n    }\r\n\r\n    search() {\r\n      if (this.state.searchKey !== \"\") {\r\n        let display = [];\r\n        let results = [];\r\n        let re = new RegExp (this.state.searchKey, \"g\")\r\n        for (const element of product) {\r\n        if (re.test(element.name) || re.test(element.description)){\r\n          display.push(element);\r\n          results.push(element);\r\n        }\r\n        }\r\n        if (results.length === 0) {\r\n          setTimeout(()=>{\r\n            this.setState({filterDis: \"none\"})\r\n          this.setState({storeDis: \"none\"})\r\n          this.setState({errorDis: \"flex\"})\r\n          },5)\r\n        }\r\n        setTimeout(()=>{\r\n          this.setState({display: display})\r\n          this.setState({results:results})\r\n        },5)\r\n      }\r\n    }\r\n\r\n    pagination (e) {\r\n      let currentPage = parseInt(e.target.innerText)\r\n      let productPerPage = 10\r\n      let endIndex = productPerPage * currentPage\r\n      let startIndex = endIndex - productPerPage\r\n      let product = [...this.state.product]\r\n      let display = product.slice(startIndex, endIndex)\r\n      this.setState({display})\r\n\r\n    }\r\n\r\n    paginationSetup () {\r\n      let currentPage = 1\r\n      let productPerPage = 10\r\n      let endIndex = productPerPage * currentPage\r\n      let startIndex = endIndex - productPerPage\r\n      let product = [...this.state.product]\r\n      let display = product.slice(startIndex, endIndex)\r\n      let lastPage = Math.ceil(product.length / productPerPage)\r\n      let pages = []\r\n      for (let index = 1; index < lastPage+1; index++) {\r\n        pages.push(index)\r\n        \r\n      }\r\n      this.setState({display, pages})\r\n    }\r\n\r\n    \r\n \r\n\r\n   render(){\r\n      return(\r\n          <div className='storeCont'>\r\n            <div className=\"searchErr\" style={{display: this.state.errorDis}}>Sorry, your search didn't match any results, please try searching something else.</div>\r\n              <div className='filter' style={{display: this.state.filterDis}}>\r\n                  <div className='sort filterDiv'>\r\n                      <span className='title'>Sort By:</span><br/>\r\n                      <select className='sortSel' onChange={(e) => this.sort(e)}>\r\n                          <option value='low'>Price: Low - High</option>\r\n                          <option value='high'>Price: High - Low</option>\r\n                      </select>\r\n                  </div>\r\n                  <div className='category filterDiv'>\r\n                  <span className='title'>Category:</span><br/>\r\n                    <input type=\"checkbox\" id=\"pens\" name=\"category\" value=\"pens\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"pens\"> Pens</label><br/>\r\n                    <input type=\"checkbox\" id=\"pencils\" name=\"category\" value=\"pencils\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"pencils\"> Pencils</label><br/>\r\n                    <input type=\"checkbox\" id=\"diaries\" name=\"category\" value=\"diaries\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"diaries\"> Diaries & Planners</label><br/>\r\n                    <input type=\"checkbox\" id=\"notebooks\" name=\"category\" value=\"notebooks\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"notebooks\"> Notebooks & Pads</label><br/>\r\n                    <input type=\"checkbox\" id=\"school\" name=\"category\" value=\"school\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"school\"> School & Office Supplies</label><br/>\r\n                    <input type=\"checkbox\" id=\"folders\" name=\"folders\" value=\"folders\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"folders\"> Filing & Folders</label><br/>\r\n                  </div>\r\n                  <div className='brands filterDiv'>\r\n                  <span className='title'>Brands:</span><br/>\r\n                    <input type=\"checkbox\" id=\"brandA\" name=\"brands\" value=\"brandA\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"brandA\"> brandA</label><br/>\r\n                    <input type=\"checkbox\" id=\"brandB\" name=\"brands\" value=\"brandB\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"brandB\"> brandB</label><br/>\r\n                    <input type=\"checkbox\" id=\"brandC\" name=\"brands\" value=\"brandC\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"brandC\"> brandC</label><br/>\r\n                    <input type=\"checkbox\" id=\"brandD\" name=\"brands\" value=\"brandD\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"brandD\"> brandD</label><br/>\r\n                  </div>\r\n                  <div className='color filterDiv'>\r\n                  <span className='title'>Color:</span><br/>\r\n                    <input type=\"checkbox\" id=\"black\" name=\"color\" value=\"black\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"black\"> Black</label><br/>\r\n                    <input type=\"checkbox\" id=\"white\" name=\"color\" value=\"white\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"white\">White</label><br/>\r\n                    <input type=\"checkbox\" id=\"purple\" name=\"color\" value=\"purple\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"purple\"> Purple</label><br/>\r\n                    <input type=\"checkbox\" id=\"blue\" name=\"color\" value=\"blue\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"blue\"> Blue</label><br/>\r\n                    <input type=\"checkbox\" id=\"green\" name=\"color\" value=\"green\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"green\"> Green</label><br/>\r\n                    <input type=\"checkbox\" id=\"yellow\" name=\"color\" value=\"yellow\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"yellow\"> Yellow</label><br/>\r\n                    <input type=\"checkbox\" id=\"orange\" name=\"color\" value=\"orange\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"orange\"> Orange</label><br/>\r\n                    <input type=\"checkbox\" id=\"red\" name=\"color\" value=\"red\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"red\"> Red</label><br/>\r\n                    <input type=\"checkbox\" id=\"pink\" name=\"color\" value=\"pink\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"pink\"> Pink</label><br/>\r\n                    <input type=\"checkbox\" id=\"multi\" name=\"color\" value=\"multi\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"multi\">Multi</label><br/>\r\n                  </div>\r\n                  <div className='price filterDiv'>\r\n                  <span className='title'>Price:</span><br/>\r\n                    <input type=\"checkbox\" id=\"0-10\" name=\"priceRange\" value=\"0-10\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"0-10\">0-10 USD</label><br/>\r\n                    <input type=\"checkbox\" id=\"11-20\" name=\"priceRange\" value=\"11-20\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"11-20\">11-20 USD</label><br/>\r\n                    <input type=\"checkbox\" id=\"21-30\" name=\"priceRange\" value=\"21-30\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"21-30\">21-30 USD</label><br/>\r\n                    <input type=\"checkbox\" id=\"31-40\" name=\"priceRange\" value=\"31-40\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"31-40\">31-40 USD</label><br/>\r\n                    <input type=\"checkbox\" id=\"41-50\" name=\"priceRange\" value=\"41-50\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"41-50\">41-50 USD</label><br/>\r\n                  </div>\r\n              </div>\r\n              <div className='storeDisp' style={{display: this.state.storeDis}}>\r\n              {this.state.display.map((v) =>\r\n              <div key={\"divkey\"+v.id}>\r\n                <div className='product' productid={v.id}>\r\n                    <NavLink exact to={\"/Product/\"+v.id} ><img src={v.src} alt='product' width='180px'/></NavLink><br/>\r\n                    <span className='prodName' style={{fontSize:\"20px\"}}>{v.name}</span><br/>\r\n                    <span className='price'>{v.price}$</span><br/>\r\n                    <button type=\"button\" className='fas fa-search-plus' data-bs-toggle=\"modal\" data-bs-target={\"#modal\"+v.id+\"\"}></button>\r\n                </div>\r\n                <div className=\"modal fade\" id={\"modal\"+v.id+\"\"} tabIndex=\"-1\" aria-labelledby={\"exampleModalLabel\"+v.id} aria-hidden=\"true\">\r\n                  <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                        <h5 className=\"modal-title\" id={\"exampleModalLabel\"+v.id}>{v.name}</h5>\r\n                        <div className=\"modCon\">\r\n                        <div className=\"modLeft\">\r\n                          <img src={v.src} alt='product' width='200px'/>\r\n                          <span>{v.price}$</span>\r\n                        </div>\r\n                        <div className=\"modRight\">\r\n                          <p>{v.description}</p>\r\n                          <div className='buy'>\r\n                            <select className='qt'>\r\n                                <option value=\"1\">1</option>\r\n                                <option value=\"2\">2</option>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                                <option value=\"5\">5</option>\r\n                                <option value=\"6\">6</option>\r\n                                <option value=\"7\">7</option>\r\n                            </select>\r\n                            <button className='addcart' id={v.id} onClick={this.addToCart}>ADD TO CART</button>\r\n                            <button className='fas fa-heart addWish' id={v.id} onClick={this.addToWish}></button>\r\n                          </div>\r\n                          <span className='addMsg'>{this.state.addMsg}</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>)}                  \r\n              </div>\r\n              <br/>\r\n              <nav aria-label=\"Page navigation example\">\r\n                <ul class=\"pagination\">\r\n                  <li class=\"page-item\"><button class=\"page-link\" href=\"#\">Previous</button></li>\r\n                  {this.state.pages.map((v) => \r\n                  <li class=\"page-item\" key={v}><button class=\"page-link\" onClick={(e)=>{this.pagination(e)}}>{v}</button></li>\r\n                  )}                  \r\n                  <li class=\"page-item\"><button class=\"page-link\" href=\"#\">Next</button></li>\r\n                </ul>\r\n              </nav>\r\n          </div>\r\n        \r\n\r\n      );\r\n   }\r\n  }\r\n\r\nexport default Store;","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\blog\\Blog.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\shipping\\Shipping.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\faq\\Faq.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\home\\Home.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\about\\About.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\contact\\Contact.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\footer\\Footer.js",["201","202","203"],"import React, { Component } from 'react';\r\nimport './Footer.css';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nclass Footer extends Component{\r\n   render(){\r\n      return(\r\n         <div className='foot'>\r\n            <div className='info'> INFO <br/>\r\n            <NavLink exact to=\"/\" activeStyle={{color:\"white\"}} className='infolink'>HOME</NavLink>\r\n            <NavLink exact to=\"/Faq\" activeStyle={{color:\"white\"}} className='infolink'>FAQ</NavLink>\r\n            <NavLink exact to=\"/Shipping\" activeStyle={{color:\"white\"}} className='infolink'>SHIPPING & RETURNS</NavLink>\r\n            <NavLink exact to=\"/Contact\" activeStyle={{color:\"white\"}} className='infolink'>CONTACT US</NavLink>\r\n            </div>\r\n            <div className='newsletter'>\r\n               <form>\r\n                  <label htmlFor=\"email\">SIGN UP FOR UPDATES</label><br/><br/>\r\n                  <input type=\"email\" id=\"email\" name=\"email\"></input>\r\n                  <input type=\"submit\" id=\"subs\" value=\"SUBSCRIBE\"></input>\r\n               </form>\r\n            </div>\r\n            <div className='social'>\r\n               <div>\r\n               <a href=\"https://www.facebook.com/\" className=\"fab fa-facebook-square socialmedia\"></a>\r\n               <a href=\"https://www.instagram.com/\" className=\"fab fa-instagram socialmedia\"></a>\r\n               <a href=\"https://twitter.com/twitter\" className=\"fab fa-twitter-square socialmedia\"></a>\r\n               </div>\r\n               <small>© 2021, Shop</small>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\nexport default Footer;\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\header\\Header.js",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\notfound\\NotFound.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\product\\Product.js",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\new\\New.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\featured\\Featured.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\dropdown\\Dropdown.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\payment\\Payment.jsx",["204"],"import React, {Component} from 'react'\r\nimport Dropdown from '../dropdown/Dropdown'\r\nimport Paypal from '../Paypal'\r\nimport Success from '../Success/Success'\r\nimport Fail from '../Fail/Fail'\r\nimport './Payment.css'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {Form, Button, Card, Alert} from 'react-bootstrap'\r\n\r\n\r\n\r\nexport class Payment extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            payment: true,\r\n            shippingInfo: [],\r\n            invoice: [],\r\n            token: localStorage.getItem(\"token\"),\r\n            payload: {},\r\n            error: ''\r\n\r\n        }\r\n        this.firstNameRef = React.createRef();\r\n        this.lastNameRef = React.createRef();\r\n        this.emailRef = React.createRef();\r\n        this.countryRef = React.createRef();\r\n        this.cityRef = React.createRef();\r\n        this.addressRef = React.createRef();\r\n        this.zipRef = React.createRef();\r\n        this.phoneRef = React.createRef();\r\n    }\r\n\r\nparseJwt () {\r\n    let token = localStorage.getItem(\"token\")\r\n    var base64Url = token.split('.')[1];\r\n    var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n    }).join(''));\r\n\r\n    this.setState({payload: JSON.parse(jsonPayload)})\r\n};\r\n\r\n    componentWillMount () {\r\n        this.parseJwt()\r\n        this.getInvoice()        \r\n      }\r\n\r\n      async handleSubmit(e) {\r\n        e.preventDefault()\r\n        let payload = this.state.payload\r\n        this.setState({error: ''})\r\n        let id = payload.id\r\n        let firstName =  this.firstNameRef.current.value \r\n        let lastName = this.lastNameRef.current.value  \r\n        let email = this.emailRef.current.value \r\n        let country = this.countryRef.current.value \r\n        let city = this.cityRef.current.value \r\n        let address = this.addressRef.current.value\r\n        let zip = this.zipRef.current.value\r\n        let phone = this.phoneRef.current.value\r\n\r\n        try {\r\n            const response = await axios.put(`${process.env.REACT_APP_URL}/user/${id}`, \r\n            {\r\n                id:id,\r\n                firstName: firstName,\r\n                lastName: lastName,\r\n                address: address,\r\n                email: email,\r\n                country: country,\r\n                city: city,\r\n                zip: zip,\r\n                phone: phone,\r\n                role: 'custumer',\r\n                active: true\r\n            }\r\n            )\r\n            .then((response) => {console.log(response)}, (error) => {console.log('axios error ' + error)})  \r\n        } \r\n        catch (error) {\r\n            this.setState({error})\r\n        }\r\n    }\r\n      \r\n    async getInvoice() {\r\n        try {\r\n            await axios.get(`${process.env.REACT_APP_URL}/invoice/`)\r\n            .then((response)=>{this.setState({invoice:response.data})})\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n        }\r\n\r\n      async createInvoice(e) {\r\n        e.preventDefault();\r\n        let basket = [...localStorage.getItem(\"cart\")]\r\n        let payload = {...this.state.payload}\r\n        let shipping = this.props.location.paymentProps.shipping\r\n        let tax_rate = 0.18\r\n        let total = this.props.location.paymentProps.total\r\n        let taxes = total * tax_rate\r\n        let total_ex_taxes = total - taxes\r\n        let invoice = [...this.state.invoice]\r\n        let id = parseInt(invoice[invoice.length-1].id + 1) \r\n        try {await axios.post(`${process.env.REACT_APP_URL}/invoice/`, {\r\n                basket : basket,\r\n                id : id,\r\n                customer_id : payload.id,\r\n                date : new Date (),\r\n                delivery_fees : shipping,\r\n                reference : localStorage.getItem(\"orderId\"),\r\n                returned : \"false\",\r\n                status : \"ordered\",\r\n                tax_rate : tax_rate,\r\n                total : total, \r\n                taxes : taxes,\r\n                total_ex_taxes : total_ex_taxes\r\n          })\r\n          .then((response) => {\r\n            console.log(response);\r\n            localStorage.setItem(\"cart\", [])\r\n          }, (error) => {\r\n            console.log('axios error ' + error);\r\n          });\r\n        }\r\n        catch {\r\n           console.error('Faild to complete order')\r\n        }\r\n      }\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <div className='payCont'>\r\n                    <div className=\"summery\">\r\n                        <h3>Summery</h3>\r\n                        <Dropdown/>\r\n                    </div><br/>\r\n                    <div>\r\n                        <h3>Shipping Details</h3>\r\n                        <>\r\n{this.state.payload ? \r\n    <>\r\n  <Card style={{maxWidth: '400px', margin: '15px auto'}} className='d-flex justify-content-center'>\r\n            <Card.Body>\r\n                {this.state.error && <Alert variant='danger'>{this.state.error}</Alert>}\r\n                <Form onSubmit={(e)=>{this.handleSubmit(e)}}>\r\n                    <Form.Group id=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={this.emailRef} required defaultValue={this.state.payload.email}/>\r\n                    </Form.Group>                    \r\n                    <Form.Group id=\"firstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type=\"text\" ref={this.firstNameRef} defaultValue={this.state.payload.firstName}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"lastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type=\"text\" ref={this.lastNameRef} defaultValue={this.state.payload.lastName}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"country\">\r\n                        <Form.Label>country</Form.Label>\r\n                        <Form.Control type=\"text\" ref={this.countryRef} defaultValue={this.state.payload.country}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"city\">\r\n                        <Form.Label>city</Form.Label>\r\n                        <Form.Control type=\"text\" ref={this.cityRef} defaultValue={this.state.payload.city}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"address\">\r\n                        <Form.Label>address</Form.Label>\r\n                        <Form.Control type=\"text\" ref={this.addressRef} defaultValue={this.state.payload.address}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"zip\">\r\n                        <Form.Label>zip</Form.Label>\r\n                        <Form.Control type=\"text\" ref={this.zipRef} defaultValue={this.state.payload.zip}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"phone\">\r\n                        <Form.Label>phone</Form.Label>\r\n                        <Form.Control type=\"text\" ref={this.phoneRef} defaultValue={this.state.payload.phone}/>\r\n                    </Form.Group><br/>\r\n                    <Button className='w-100' type='submit'>Update</Button><br/><br/>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n        </> : <div>Loading...</div>}\r\n        </>\r\n                    </div><br/>\r\n                    <div><h3>Payment method:</h3> <br/>\r\n                        <Paypal/></div>\r\n                    <button  className='payBtn' data-bs-toggle=\"modal\" data-bs-target={\"#modalPay\"} disabled={false} onClick={(e)=>{this.createInvoice(e)}}>Submit your order</button>\r\n                    <div className=\"modal fade\" id={\"modalPay\"} tabIndex=\"-1\" aria-labelledby={\"exampleModalLabel\"} aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                            <div>\r\n                                {localStorage.getItem(\"orderErr\").length === 0 ? <Success email={this.emailRef.current ? this.emailRef.current.value : null}/> : <Fail/>}\r\n                                <Link to=\"/\"><button data-bs-dismiss=\"modal\" aria-label=\"Close\">Back to home page</button></Link>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Payment\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\newAccount\\NewAccount.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\newAccount\\Newaccount.jsx",["205"],"import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport './Newaccount.css'\r\nimport Login from '../login/Login';\r\n\r\nexport class Newaccount extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            accountInfo: [],\r\n            email: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email1: \"\",\r\n            phone: \"\",\r\n            country: \"\",\r\n            city: \"\",\r\n            address: \"\",\r\n            zip: \"\",\r\n            password1: \"\",\r\n            password2: \"\",\r\n            password: \"\",\r\n            username: \"\",\r\n            finished: false\r\n        }  \r\n    }\r\n\r\n    accountDetails (e) {\r\n        e.preventDefault()\r\n        console.log(e.target.childNodes[3].childNodes[0].childNodes[0].childNodes[0].childNodes[0].innerText);\r\n        let accountInfo = []\r\n        for (let i =0; i<5; i++) {\r\n            for (let j=0; j<2; j++) {\r\n                let titel = e.target.childNodes[3].childNodes[0].childNodes[i].childNodes[j].childNodes[0].innerText\r\n                \r\n                let value = e.target.childNodes[3].childNodes[0].childNodes[i].childNodes[j].childNodes[2].value\r\n                let accountObj = {titel, value}\r\n                accountInfo.push(accountObj)\r\n            }\r\n        }\r\n\r\n        let username = e.target.childNodes[3].childNodes[0].childNodes[1].childNodes[0].childNodes[2].value\r\n        let patt = /[^@]+/gm\r\n        username = patt.exec(username);\r\n        username = username[0]\r\n        setTimeout(()=>{this.setState({accountInfo, username, finished: true})},5)\r\n    }\r\n\r\n    validate (e) {\r\n        let patt = \"\"\r\n        let value = \"\"\r\n        let res = \"\"\r\n        if (e.target.id === 'firstName') {\r\n            patt = /[0-9]+/gm\r\n            value = e.target.value\r\n            res = patt.test(value);\r\n            if (res === true || value === \"\") {\r\n                setTimeout(()=>{this.setState({firstName: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({firstName: 'is-valid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'lastName') {\r\n            patt = /[0-9]+/gm\r\n            value = e.target.value\r\n            res = patt.test(value);\r\n            if (res === true || value === \"\") {\r\n                setTimeout(()=>{this.setState({lastName: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({lastName: 'is-valid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'email1') {\r\n            patt = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/gm\r\n            value = e.target.value\r\n            res = patt.test(value);\r\n            if (res === true) {\r\n                setTimeout(()=>{this.setState({email1: 'is-valid'});},5)\r\n            }\r\n            else if (res === false || value === \"\") {\r\n                setTimeout(()=>{this.setState({email1: 'is-invalid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'phone1') {\r\n            patt = /[a-z,A-Z]+/gm\r\n            value = e.target.value\r\n            res = patt.test(value);\r\n            if (res === true || value === \"\" || value.length < 10) {\r\n                setTimeout(()=>{this.setState({phone: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({phone: 'is-valid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'country') {\r\n            patt = /[0-9]+/gm\r\n            value = e.target.value\r\n            res = patt.test(value);\r\n            if (res === true || value === \"\") {\r\n                setTimeout(()=>{this.setState({country: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({country: 'is-valid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'city') {\r\n            patt = /[0-9]+/gm\r\n            value = e.target.value\r\n            res = patt.test(value);\r\n            if (res === true || value === \"\") {\r\n                setTimeout(()=>{this.setState({city: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({city: 'is-valid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'address') {\r\n            value = e.target.value\r\n            if (value === \"\") {\r\n                setTimeout(()=>{this.setState({address: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({address: 'is-valid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'password1') {\r\n            \r\n            value = e.target.value\r\n            if (value.length < 8) {\r\n                setTimeout(()=>{this.setState({password1: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({password1: 'is-valid', password: value});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'password2') {\r\n            value = e.target.value\r\n            if (value !== this.state.password) {\r\n                setTimeout(()=>{this.setState({password2: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({password2: 'is-valid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'zip') {\r\n            patt = /[a-z,A-Z]+/gm\r\n            value = e.target.value\r\n            res = patt.test(value);\r\n            if (res === true || value === \"\") {\r\n                setTimeout(()=>{this.setState({zip: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({zip: 'is-valid'});},5)\r\n            } \r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.finished ? \r\n                <Login/> : \r\n                <div  className='newacc'>\r\n               <form onSubmit={(e)=>{this.accountDetails(e)}}>\r\n                        <h3>Create new account</h3><br/>\r\n                        <span style={{color: 'red'}}>* required</span>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td><label htmlFor=\"firstName\" className=\"form-label\">First name *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.firstName} onChange={(e)=>{this.validate(e)}} id=\"firstName\" placeholder=\"Letters only\" required/></td>\r\n                                <td><label htmlFor=\"lastName\" className=\"form-label\">Last name *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.lastName} onChange={(e)=>{this.validate(e)}} id=\"lastName\" placeholder=\"Letters only\" required/></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><label htmlFor=\"email1\" className=\"form-label\">Email *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.email1} onChange={(e)=>{this.validate(e)}} id=\"email1\" required/></td>\r\n                                <td><label htmlFor=\"phone1\" className=\"form-label\">Phone *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.phone} onChange={(e)=>{this.validate(e)}} id=\"phone1\" placeholder=\"Digits only, at least 10 digits\" required/></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><label htmlFor=\"password1\" className=\"form-label\">Password *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.password1} onChange={(e)=>{this.validate(e)}} id=\"password1\" placeholder=\"At least 8 charachters\" required/></td>\r\n                                <td><label htmlFor=\"password2\" className=\"form-label\">Repeat password *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.password2} onChange={(e)=>{this.validate(e)}} id=\"password2\" placeholder=\"Your password should match\" required/></td>\r\n                            </tr>\r\n                            <tr>\r\n                            <td><label htmlFor=\"country\" className=\"form-label\">Country *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.country} onChange={(e)=>{this.validate(e)}} id=\"country\" placeholder=\"Letters only\" required/></td>\r\n                                <td><label htmlFor=\"city\" className=\"form-label\">City *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.city} onChange={(e)=>{this.validate(e)}} id=\"city\" placeholder=\"Letters only\" required/></td>\r\n                            </tr>\r\n                            <tr>\r\n                            <td><label htmlFor=\"address\" className=\"form-label\">Address *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.address} onChange={(e)=>{this.validate(e)}} id=\"address\" required/></td>\r\n                                <td><label htmlFor=\"zip\" className=\"form-label\">Zip *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.zip} onChange={(e)=>{this.validate(e)}} id=\"zip\" placeholder=\"Digits only\" required/></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"subBtnNew\">\r\n                        <input type=\"submit\" className='payBtn' value=\"Submit\"/>\r\n                    </div>\r\n                    </form>\r\n                    </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Newaccount\r\n",["206","207"],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Paypal.jsx",["208","209"],"import React, { useRef, useEffect } from \"react\";\r\n\r\nexport default function Paypal() {\r\n\r\nconst totalF = JSON.parse(localStorage.getItem(\"total\"))\r\n\r\nlet items = JSON.parse(localStorage.getItem(\"cart\")).length\r\n\r\nlet orderId = 0\r\n\r\nconst paypal = useRef();\r\n\r\n  useEffect(() => {\r\n    window.paypal\r\n      .Buttons({\r\n        createOrder: (data, actions, err) => {\r\n          return actions.order.create({\r\n            intent: \"CAPTURE\",\r\n            purchase_units: [\r\n              {\r\n                description: \"Number of items: \" + items,\r\n                amount: {\r\n                  currency_code: \"USD\",\r\n                  value: totalF,\r\n                },\r\n              },\r\n            ],\r\n          });\r\n        },\r\n        onApprove: async (data, actions) => {\r\n          const order = await actions.order.capture();\r\n          localStorage.setItem(\"orderId\",JSON.stringify(order.id))\r\n        },\r\n        onError: (err) => {\r\n          localStorage.setItem(\"orderErr\",JSON.stringify(err))\r\n        },\r\n      })\r\n      .render(paypal.current);\r\n  }, []);\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <div ref={paypal}></div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Success\\Success.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\WishList\\WishList.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Fail\\Fail.jsx",[],["210","211"],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Post\\Post.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Dashboard.jsx",["212","213"],"import axios from 'axios'\r\nimport React, {useState, useEffect} from 'react'\r\nimport { Card, Button, Alert } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n\r\nexport default function Dashboard() {\r\n    const [error, setError] = useState('')\r\n    const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    const history = useHistory()\r\n    const [user, setUser] = useState()\r\n\r\n    useEffect(() => {\r\n        getUser()\r\n    },[])\r\n\r\n    \r\n    async function getUser() {\r\n    try {\r\n        await axios.get(`${process.env.REACT_APP_URL}/user/`)\r\n        .then((response)=>{\r\n            response.data.forEach(element => {\r\n                if (element.email === currentUser.user) {\r\n                    setUser({...element})\r\n                }\r\n            });\r\n\r\n        })\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n    }\r\n    \r\n    async function handleLogout() {\r\n        setError('')\r\n        try {\r\n            localStorage.setItem('token', \"\")\r\n            localStorage.setItem('currentUser', \"\")\r\n            history.push('/login')\r\n        }\r\n        catch {\r\n            setError('Faild to log out')\r\n        }\r\n    }\r\n    return user !== undefined ? (\r\n        \r\n<>\r\n    <>\r\n<Card style={{maxWidth: '400px', margin: '15px auto'}} className='d-flex justify-content-center'>\r\n    <Card.Body>\r\n    <h2 className='text-center mb-4 '>Profile</h2>\r\n    {error && <Alert variant='danger'>{error}</Alert>}\r\n    <strong>Email:</strong> {user.email}<br/>\r\n    <strong>First Name:</strong> {user.firstName}<br/>\r\n    <strong>Last Name:</strong> {user.lastName}<br/>\r\n    <strong>Country:</strong> {user.country}<br/>\r\n    <strong>City:</strong> {user.city}<br/>\r\n    <strong>Address:</strong> {user.address}<br/>\r\n    <strong>Zip:</strong> {user.zip}<br/>\r\n    <strong>Photo:</strong><br/><img src={user.photoURL ? user.photoURL: '/img/anonymous.png'} alt='User Photo' width='200px'/>\r\n    <Link to=\"/profile\" className='btn btn-primary w-100 mt-3'>Update Profile</Link>\r\n    {user.role === \"admin\" ? \r\n           <Link to=\"/admin\" className='btn btn-danger w-100 mt-3'>Go to Admin Dashboard</Link>\r\n         : null }\r\n    </Card.Body>\r\n</Card>\r\n<div className=\"w-100 text-center mt-2\">\r\n           <Button variant=\"link\" onClick={handleLogout}>Log Out</Button>\r\n\r\n           \r\n        </div>\r\n        </> \r\n\r\n</>\r\n    ): <div>Loading...</div>\r\n}\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Signup.jsx",["214"],"import axios from 'axios'\r\nimport React, {useRef, useState, useEffect} from 'react'\r\nimport {Form, Button, Card, Alert} from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from '../AuthContext'\r\n\r\nexport default function Signup() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const firstNameRef = useRef()\r\n    const lastNameRef = useRef()\r\n    const countryRef = useRef()\r\n    const cityRef = useRef()\r\n    const addressRef = useRef()\r\n    const zipRef = useRef()\r\n    const phoneRef = useRef()\r\n    const photoRef = useRef()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [users, setUsers] = useState([])\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getUser()\r\n    },[])\r\n\r\n      \r\n    async function getUser() {\r\n    try {\r\n        const response = await axios.get(`${process.env.REACT_APP_URL}/user/`);\r\n        let user = response.data\r\n        setUsers(user)\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n    }\r\n\r\n   async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        let id = users.length+1\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n        let firstName =  firstNameRef.current.value\r\n        let lastName = lastNameRef.current.value\r\n        let email = emailRef.current.value\r\n        let password = passwordRef.current.value\r\n        let country = countryRef.current.value\r\n        let city = cityRef.current.value\r\n        let address = addressRef.current.value\r\n        let zip = zipRef.current.value\r\n        let phone = phoneRef.current.value\r\n        try { await axios.post(`${process.env.REACT_APP_URL}/auth/register`, {\r\n            id:id,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            address: address,\r\n            email: email,\r\n            password: password,\r\n            country: country,\r\n            city: city,\r\n            zip: zip,\r\n            phone: phone,\r\n            role: 'custumer',\r\n            active: true\r\n          })\r\n          .then((response) => {\r\n            console.log(response);\r\n            handlelogin(email, password)\r\n                    //    history.push('/Dashboard')\r\n          }, (error) => {\r\n            console.log('axios error ' + error);\r\n          });\r\n            // setError('')\r\n            // setLoading(true)\r\n        //    await signup(emailRef.current.value, passwordRef.current.value)\r\n        //    history.push('/Dashboard')\r\n        }\r\n        catch {\r\n            setError('Faild to create an account')\r\n        }\r\n\r\n        setLoading(false)   \r\n    }\r\n\r\n    async function handlelogin(email,password) {\r\n        try {await axios.post(`${process.env.REACT_APP_URL}/auth/login`, {\r\n            email: email,\r\n            password: password,\r\n          })\r\n          .then((response) => {\r\n            console.log(response);\r\n            localStorage.setItem('token', response.data.token)\r\n            localStorage.setItem('currentUser', JSON.stringify({user: response.data.user.email, role: response.data.user.role}))\r\n            history.push('/Dashboard')\r\n          }, (error) => {\r\n            console.log('axios error ' + error);\r\n          });\r\n\r\n\r\n        //     setError('')\r\n        //     setLoading(true)\r\n        //    await login(emailRef.current.value, passwordRef.current.value)\r\n        //    history.push('/Dashboard')\r\n        }\r\n        catch {\r\n            setError('Faild to sign in')\r\n        }\r\n        setLoading(false)\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <Card style={{maxWidth: '400px', margin: '15px auto'}} className='d-flex justify-content-center'>\r\n            <Card.Body>\r\n                <h2 className='text-center mb-4 '>Sign Up</h2>\r\n                {error && <Alert variant='danger'>{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id=\"email\" className='w-100 p-0'>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordRef} required placeholder=\"at least 6 characters\"/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password-confirm\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordConfirmRef} required placeholder=\"at least 6 characters\"/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"firstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type=\"text\" ref={firstNameRef} required/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"lastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type=\"text\" ref={lastNameRef} required/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"photo\">\r\n                        <Form.Label>Photo URL</Form.Label>\r\n                        <Form.Control type=\"text\" ref={photoRef}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"country\">\r\n                        <Form.Label>country</Form.Label>\r\n                        <Form.Control type=\"text\" ref={countryRef} required/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"city\">\r\n                        <Form.Label>city</Form.Label>\r\n                        <Form.Control type=\"text\" ref={cityRef} required/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"address\">\r\n                        <Form.Label>address</Form.Label>\r\n                        <Form.Control type=\"text\" ref={addressRef} required/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"zip\">\r\n                        <Form.Label>zip</Form.Label>\r\n                        <Form.Control type=\"text\" ref={zipRef} required/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"phone\">\r\n                        <Form.Label>phone</Form.Label>\r\n                        <Form.Control type=\"text\" ref={phoneRef} required/>\r\n                    </Form.Group>\r\n                    <Button disabled={loading} className='w-100 mt-2' type='submit'>Sign Up</Button>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center m-2\">\r\n            Already have an account? <Link to=\"login\" className='text-dark'>Log in</Link>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\PrivateRoute.jsx",["215"],"import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport {useAuth} from '../AuthContext'\r\n\r\nexport default function PrivateRoute({component: Component, ...rest}) {\r\n    // const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    const currentUser = localStorage.getItem(\"currentUser\")\r\n    return (\r\n        <Route {...rest}\r\n        render={props => {\r\n            if (currentUser) {\r\n                return <Component {...props}/>\r\n            }\r\n            else {\r\n                return <Redirect to=\"/login\"/>\r\n            }\r\n        //    return currentUser ? <Component {...props}/> : <Redirect to=\"/login\"/>\r\n        }}>\r\n            \r\n        </Route>\r\n    )\r\n}\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\ForgotPassword.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Login.jsx",["216"],"import axios from 'axios'\r\nimport React, {useRef, useState} from 'react'\r\nimport {Form, Button, Card, Alert} from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from '../AuthContext'\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n\r\n   async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        let email = emailRef.current.value\r\n        let password = passwordRef.current.value\r\n        try {await axios.post(`${process.env.REACT_APP_URL}/auth/login`, {\r\n            email: email,\r\n            password: password,\r\n          })\r\n          .then((response) => {\r\n            console.log(response);\r\n            localStorage.setItem('token', response.data.token)\r\n            localStorage.setItem('currentUser', JSON.stringify({user: response.data.user.email, role: response.data.user.role}))\r\n            history.push('/Dashboard')\r\n          }, (error) => {\r\n            console.log('axios error ' + error);\r\n          });\r\n        }\r\n        catch {\r\n            setError('Faild to sign in')\r\n        }\r\n        setLoading(false)\r\n        \r\n    }\r\n    return (\r\n        <>\r\n        <Card style={{maxWidth: '400px', margin: '15px auto'}} className='d-flex justify-content-center'>\r\n            <Card.Body>\r\n                <h2 className='text-center mb-4 '>Log in</h2>\r\n                {error && <Alert variant='danger'>{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id=\"email\" className='w-100 p-0'>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordRef} required/>\r\n                    </Form.Group>\r\n                    <Button disabled={loading} className='w-100 mt-2' type='submit'>Log in</Button>\r\n                </Form>\r\n                <div className=\"w-100 text-center mt-2\">\r\n                <Link to='/forgot-password'>Forgot Password?</Link>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center m-2\">\r\n            Need an account? <Link to='/signup' className='text-dark'>Sign Up</Link>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\UpdateProfile.jsx",["217","218","219"],"import axios from 'axios'\r\nimport React, {useRef, useState, useEffect} from 'react'\r\nimport {Form, Button, Card, Alert} from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from '../AuthContext'\r\nimport {db} from '../firebase'\r\n\r\nlet emailRef = ''\r\nlet firstNameRef = ''\r\nlet lastNameRef = ''\r\nlet countryRef = ''\r\nlet cityRef = ''\r\nlet addressRef = ''\r\nlet zipRef = ''\r\nlet phoneRef = ''\r\nexport default function UpdateProfile() {\r\n    emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    firstNameRef = useRef()\r\n    lastNameRef = useRef()\r\n    countryRef = useRef()\r\n    cityRef = useRef()\r\n    addressRef = useRef()\r\n    zipRef = useRef()\r\n    phoneRef = useRef()\r\n    const photoRef = useRef()\r\n    const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    const {updateEmail, updatePassword, userData} = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [users, setUsers] = useState([])\r\n    const history = useHistory()\r\n    const [index, setIndex] = useState(-1)\r\n    const [user, setUser] = useState({})\r\n    \r\n    useEffect(() => {\r\n        getUser()\r\n    },[])\r\n\r\n    \r\n    async function getUser() {\r\n    try {\r\n        let response = await axios.get(`${process.env.REACT_APP_URL}/user/`);\r\n        let usersData = response.data\r\n        console.log(usersData)\r\n        setUsers(usersData)\r\n        console.log(users)\r\n        if (users) {\r\n            \r\n        users.forEach(element => {\r\n            if (element.email === currentUser.user) {\r\n                setUser({...element})\r\n            }\r\n        });\r\n        // console.log(user)\r\n        // console.log(users)\r\n    }\r\n       \r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n    }\r\n\r\n   function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        setError('')\r\n\r\n        if (history.location.pathname === '/update-profile' && passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        const promises = []\r\n        const displayName = firstNameRef.current.value +\" \"+ lastNameRef.current.value\r\n\r\n        if (emailRef.current.value !== currentUser.email) {\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n        if (passwordRef.current.value) {\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n        if (displayName !== currentUser.displayName) {\r\n            if (photoRef.current.value !== currentUser.photoURL)\r\n            promises.push(userData(displayName, photoRef.current.value))\r\n        }\r\n\r\n        let id = id\r\n         \r\n        db.ref('users/' + index).update({\r\n            firstName: firstNameRef.current.value !== \"\" ? firstNameRef.current.value : users[index].firstName,\r\n            lastName: lastNameRef.current.value !== \"\" ? lastNameRef.current.value : users[index].lastName,\r\n            email: emailRef.current.value !== \"\" ? emailRef.current.value : users[index].email,\r\n            country: countryRef.current.value !== \"\" ? countryRef.current.value : users[index].country,\r\n            city: cityRef.current.value !== \"\" ? cityRef.current.value : users[index].city,\r\n            zip: zipRef.current.value !== \"\" ? zipRef.current.value : users[index].zip,\r\n            phone: phoneRef.current.value !== \"\" ? phoneRef.current.value : users[index].phone,\r\n            role: 'custumer',\r\n            active: true,\r\n          });\r\n\r\n        Promise.all(promises).then(() => {\r\n            history.push('/')\r\n        }).catch(()=>{\r\n            setError('Faild to update profile')\r\n        }).finally(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n    return (\r\n        \r\n        <>\r\n        {user.email ? <>\r\n        <Card style={{maxWidth: '400px', margin: '15px auto'}} className='d-flex justify-content-center'>\r\n            <Card.Body>\r\n            {history.location.pathname === '/update-profile' ? \r\n                    <>\r\n                <h2 className='text-center mb-4 '>Update Profile</h2>\r\n                </>\r\n                    : null}\r\n                {error && <Alert variant='danger'>{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required defaultValue={user.email}/>\r\n                    </Form.Group>\r\n                    {history.location.pathname === '/update-profile' ? \r\n                    <>\r\n                    <Form.Group id=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\"/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password-confirm\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\"/>\r\n                    </Form.Group></>\r\n                    : null}\r\n                    \r\n                    <Form.Group id=\"firstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type=\"text\" ref={firstNameRef} defaultValue={user.firstName}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"lastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type=\"text\" ref={lastNameRef} defaultValue={user.lastName}/>\r\n                    </Form.Group>\r\n                    {history.location.pathname === '/update-profile' ? \r\n                    <>\r\n                    <Form.Group id=\"photo\">\r\n                        <Form.Label>Photo URL</Form.Label>\r\n                        <Form.Control type=\"text\" ref={photoRef} defaultValue={user.photoURL}/>\r\n                    </Form.Group>\r\n                    </>\r\n                    : null}\r\n                    <Form.Group id=\"country\">\r\n                        <Form.Label>country</Form.Label>\r\n                        <Form.Control type=\"text\" ref={countryRef} defaultValue={user.country}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"city\">\r\n                        <Form.Label>city</Form.Label>\r\n                        <Form.Control type=\"text\" ref={cityRef} defaultValue={user.city}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"address\">\r\n                        <Form.Label>address</Form.Label>\r\n                        <Form.Control type=\"text\" ref={addressRef} defaultValue={user.address}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"zip\">\r\n                        <Form.Label>zip</Form.Label>\r\n                        <Form.Control type=\"text\" ref={zipRef} defaultValue={user.zip}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"phone\">\r\n                        <Form.Label>phone</Form.Label>\r\n                        <Form.Control type=\"text\" ref={phoneRef} defaultValue={user.phone}/>\r\n                    </Form.Group>\r\n                    <Button disabled={loading} className='w-100' type='submit'>Update</Button>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n            <Link to=\"/\">Cancel</Link>\r\n            \r\n        </div>\r\n        </> : <div>Loading...</div>}\r\n        </>\r\n    )\r\n}\r\nexport {emailRef, firstNameRef, lastNameRef, countryRef, cityRef, addressRef, zipRef, phoneRef}\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\firebase.js",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\AuthContext.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\Administrator.jsx",["220","221","222","223","224","225"],"import {blogCreate,blogEdit,blogList} from './blog'\r\nimport {commentCreate,commentEdit,commentList} from './comment'\r\nimport {faqCreate,faqEdit,faqList} from './faq'\r\nimport {shippingCreate,shippingEdit,shippingList} from './shipping'\r\nimport {storeInfoCreate,storeInfoEdit,storeInfoList} from './storeInfo'\r\nimport * as React from \"react\";\r\nimport { Admin, Resource } from 'react-admin';\r\nimport { userList, userCreate, userEdit } from './user';\r\nimport {productList, productCreate, productEdit} from './product'\r\nimport restProvider from 'ra-data-simple-rest'\r\n\r\n  const dataProvider=restProvider(`${process.env.REACT_APP_URL}`);\r\n\r\nconst Administrator = () => (\r\n\r\n    <Admin dataProvider={dataProvider}>\r\n      <Resource name=\"user\" list={userList} edit={userEdit} create={userCreate}/>\r\n      <Resource name=\"product\" list={productList} edit={productEdit} create={productCreate}/>\r\n      <Resource name=\"blog\" list={blogList} edit={blogEdit} create={blogCreate}/>\r\n      <Resource name=\"comment\" list={commentList} edit={commentEdit} create={commentCreate}/>\r\n      <Resource name=\"faq\" list={faqList} edit={faqEdit} create={faqCreate}/>\r\n    </Admin>\r\n    \r\n);\r\n\r\nexport default Administrator;","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\posts.jsx",[],["226","227"],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\product.js",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\blog.js",["228"],"import * as React from \"react\";\r\nimport { List, Datagrid, TextField, EmailField, EditButton,\r\n    Edit, SimpleForm, TextInput, Create, DateField, ImageField, DateInput } from 'react-admin';\r\n\r\nexport const blogList = props => (\r\n    <List {...props}>\r\n        <Datagrid rowClick=\"edit\">\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"title\" />\r\n            <TextField source=\"content\" />\r\n            <DateField source=\"date\" />\r\n            <TextField source=\"comments\" />\r\n            <ImageField source=\"src\" />\r\n            <EditButton />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const blogEdit = props => (\r\n    <Edit {...props} \r\n    // undoable={false}\r\n    >\r\n        <SimpleForm>\r\n            <TextInput source=\"id\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput source=\"content\" />\r\n            <DateInput source=\"date\" />\r\n            <TextInput source=\"comments\" />\r\n            <TextInput source=\"src\" />\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const blogCreate = props => (\r\n       <Create {...props} undoable={false}>\r\n            <SimpleForm>\r\n            <TextInput source=\"id\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput source=\"content\" />\r\n            <DateInput source=\"date\" />\r\n            <TextInput source=\"comments\" />\r\n            <TextInput source=\"src\" />\r\n            </SimpleForm>\r\n        </Create>\r\n    );\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Profile.jsx",["229","230","231","232","233","234"],"import axios from 'axios'\r\nimport React, {useState, useEffect, useRef} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport {Form, Button, Card, Alert} from 'react-bootstrap'\r\n\r\n\r\nexport default function Profile() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const firstNameRef = useRef()\r\n    const lastNameRef = useRef()\r\n    const countryRef = useRef()\r\n    const cityRef = useRef()\r\n    const addressRef = useRef()\r\n    const zipRef = useRef()\r\n    const phoneRef = useRef()\r\n    const photoRef = useRef()\r\n    const [error, setError] = useState('')\r\n    const currentUser = JSON.parse(localStorage.getItem(\"currentUser\"))\r\n    const history = useHistory()\r\n    const [users, setUsers] = useState([])\r\n    const [user, setUser] = useState({})\r\n\r\n    useEffect(() => {\r\n        getUser()\r\n    },[])\r\n\r\n    \r\n    async function getUser() {\r\n        try {\r\n            await axios.get(`${process.env.REACT_APP_URL}/user/`)\r\n            .then((response)=>{\r\n                response.data.forEach(element => {\r\n                    if (element.email === currentUser.user) {\r\n                        setUser({...element})\r\n                    }\r\n                });\r\n    \r\n            })\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n        }\r\n    \r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setError('')\r\n        let id = user.id\r\n        let firstName =  firstNameRef.current.value \r\n        let lastName = lastNameRef.current.value  \r\n        let email = emailRef.current.value \r\n        let password = passwordRef.current.value.length != 0 ? passwordRef.current.value : user.password\r\n        let country = countryRef.current.value \r\n        let city = cityRef.current.value \r\n        let address = addressRef.current.value\r\n        let zip = zipRef.current.value\r\n        let phone = phoneRef.current.value\r\n\r\n        try {\r\n            const response = await axios.put(`${process.env.REACT_APP_URL}/user/${id}`, \r\n            {\r\n                id:id,\r\n                firstName: firstName,\r\n                lastName: lastName,\r\n                address: address,\r\n                email: email,\r\n                password: password,\r\n                country: country,\r\n                city: city,\r\n                zip: zip,\r\n                phone: phone,\r\n                role: 'custumer',\r\n                active: true\r\n            }\r\n            )\r\n            .then((response) => {console.log(response)}, (error) => {console.log('axios error ' + error)})  \r\n        } \r\n        catch (error) {\r\n            setError(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        \r\n<>\r\n{user ? \r\n    <>\r\n  <Card style={{maxWidth: '400px', margin: '15px auto'}} className='d-flex justify-content-center'>\r\n            <Card.Body>\r\n                <h2 className='text-center mb-4 '>Update Profile</h2>\r\n                {error && <Alert variant='danger'>{error}</Alert>}\r\n                <Form onSubmit={(e)=>{handleSubmit(e)}}>\r\n                    <Form.Group id=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required defaultValue={user.email}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\"/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password-confirm\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\"/>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group id=\"firstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type=\"text\" ref={firstNameRef} defaultValue={user.firstName}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"lastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type=\"text\" ref={lastNameRef} defaultValue={user.lastName}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"photo\">\r\n                        <Form.Label>Photo URL</Form.Label>\r\n                        <Form.Control type=\"text\" ref={photoRef} defaultValue={user.photoURL}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"country\">\r\n                        <Form.Label>country</Form.Label>\r\n                        <Form.Control type=\"text\" ref={countryRef} defaultValue={user.country}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"city\">\r\n                        <Form.Label>city</Form.Label>\r\n                        <Form.Control type=\"text\" ref={cityRef} defaultValue={user.city}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"address\">\r\n                        <Form.Label>address</Form.Label>\r\n                        <Form.Control type=\"text\" ref={addressRef} defaultValue={user.address}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"zip\">\r\n                        <Form.Label>zip</Form.Label>\r\n                        <Form.Control type=\"text\" ref={zipRef} defaultValue={user.zip}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"phone\">\r\n                        <Form.Label>phone</Form.Label>\r\n                        <Form.Control type=\"text\" ref={phoneRef} defaultValue={user.phone}/>\r\n                    </Form.Group><br/>\r\n                    <Button className='w-100' type='submit'>Update</Button><br/><br/>\r\n                    <Link to=\"/\"><Button className='w-100 btn btn-secondary'>Cancel</Button></Link>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n        </> : <div>Loading...</div>}\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\comment.js",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\storeInfo.js",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\faq.js",["235","236"],"import * as React from \"react\";\r\nimport { List, Datagrid, TextField, EditButton,\r\n    Edit, SimpleForm, TextInput, Create, DateField, DateInput } from 'react-admin';\r\n\r\nexport const faqList = props => (\r\n    <List {...props}>\r\n        <Datagrid rowClick=\"edit\">\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"title\" />\r\n            <TextField source=\"content\" />\r\n            <EditButton />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const faqEdit = props => (\r\n    <Edit {...props} \r\n    // undoable={false}\r\n    >\r\n        <SimpleForm>\r\n            <TextInput source=\"id\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput source=\"content\" />\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const faqCreate = props => (\r\n       <Create {...props} undoable={false}>\r\n            <SimpleForm>\r\n            <TextInput source=\"id\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput source=\"content\" />\r\n            </SimpleForm>\r\n        </Create>\r\n    );\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\shipping.js",["237","238"],"import * as React from \"react\";\r\nimport { List, Datagrid, TextField, EditButton,\r\n    Edit, SimpleForm, TextInput, Create, DateField, DateInput } from 'react-admin';\r\n\r\nexport const shippingList = props => (\r\n    <List {...props}>\r\n        <Datagrid rowClick=\"edit\">\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"region\" />\r\n            <TextField source=\"cost\" />\r\n            <TextField source=\"estimatedTime\" />\r\n            <TextField source=\"service\" />\r\n            <EditButton />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const shippingEdit = props => (\r\n    <Edit {...props} \r\n    // undoable={false}\r\n    >\r\n        <SimpleForm>\r\n            <TextInput source=\"id\" />\r\n            <TextInput source=\"region\" />\r\n            <TextInput source=\"cost\" />\r\n            <TextInput source=\"estimatedTime\" />\r\n            <TextInput source=\"service\" />\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const shippingCreate = props => (\r\n       <Create {...props} undoable={false}>\r\n            <SimpleForm>\r\n            <TextInput source=\"id\" />\r\n            <TextInput source=\"region\" />\r\n            <TextInput source=\"cost\" />\r\n            <TextInput source=\"estimatedTime\" />\r\n            <TextInput source=\"service\" />\r\n            </SimpleForm>\r\n        </Create>\r\n    );\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\user.js",[],{"ruleId":"239","severity":1,"message":"240","line":49,"column":7,"nodeType":"241","messageId":"242","endLine":49,"endColumn":21},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":176,"column":28,"nodeType":"249","messageId":"250","endLine":176,"endColumn":62},{"ruleId":"247","severity":1,"message":"248","line":182,"column":28,"nodeType":"249","messageId":"250","endLine":182,"endColumn":62},{"ruleId":"247","severity":1,"message":"248","line":188,"column":28,"nodeType":"249","messageId":"250","endLine":188,"endColumn":62},{"ruleId":"247","severity":1,"message":"248","line":194,"column":28,"nodeType":"249","messageId":"250","endLine":194,"endColumn":62},{"ruleId":"251","severity":1,"message":"252","line":24,"column":16,"nodeType":"253","endLine":24,"endColumn":99},{"ruleId":"251","severity":1,"message":"252","line":25,"column":16,"nodeType":"253","endLine":25,"endColumn":94},{"ruleId":"251","severity":1,"message":"252","line":26,"column":16,"nodeType":"253","endLine":26,"endColumn":100},{"ruleId":"239","severity":1,"message":"254","line":66,"column":19,"nodeType":"241","messageId":"242","endLine":66,"endColumn":27},{"ruleId":"239","severity":1,"message":"255","line":2,"column":8,"nodeType":"241","messageId":"242","endLine":2,"endColumn":17},{"ruleId":"243","replacedBy":"256"},{"ruleId":"245","replacedBy":"257"},{"ruleId":"239","severity":1,"message":"258","line":9,"column":5,"nodeType":"241","messageId":"242","endLine":9,"endColumn":12},{"ruleId":"259","severity":1,"message":"260","line":39,"column":6,"nodeType":"261","endLine":39,"endColumn":8,"suggestions":"262"},{"ruleId":"243","replacedBy":"263"},{"ruleId":"245","replacedBy":"264"},{"ruleId":"259","severity":1,"message":"265","line":15,"column":7,"nodeType":"261","endLine":15,"endColumn":9,"suggestions":"266"},{"ruleId":"267","severity":1,"message":"268","line":60,"column":33,"nodeType":"253","endLine":60,"endColumn":128},{"ruleId":"239","severity":1,"message":"269","line":5,"column":10,"nodeType":"241","messageId":"242","endLine":5,"endColumn":17},{"ruleId":"239","severity":1,"message":"269","line":3,"column":9,"nodeType":"241","messageId":"242","endLine":3,"endColumn":16},{"ruleId":"239","severity":1,"message":"269","line":5,"column":10,"nodeType":"241","messageId":"242","endLine":5,"endColumn":17},{"ruleId":"239","severity":1,"message":"270","line":34,"column":19,"nodeType":"241","messageId":"242","endLine":34,"endColumn":27},{"ruleId":"259","severity":1,"message":"265","line":39,"column":7,"nodeType":"261","endLine":39,"endColumn":9,"suggestions":"271"},{"ruleId":"272","severity":1,"message":"273","line":88,"column":18,"nodeType":"241","messageId":"274","endLine":88,"endColumn":20},{"ruleId":"239","severity":1,"message":"275","line":4,"column":9,"nodeType":"241","messageId":"242","endLine":4,"endColumn":23},{"ruleId":"239","severity":1,"message":"276","line":4,"column":24,"nodeType":"241","messageId":"242","endLine":4,"endColumn":36},{"ruleId":"239","severity":1,"message":"277","line":4,"column":37,"nodeType":"241","messageId":"242","endLine":4,"endColumn":49},{"ruleId":"239","severity":1,"message":"278","line":5,"column":9,"nodeType":"241","messageId":"242","endLine":5,"endColumn":24},{"ruleId":"239","severity":1,"message":"279","line":5,"column":25,"nodeType":"241","messageId":"242","endLine":5,"endColumn":38},{"ruleId":"239","severity":1,"message":"280","line":5,"column":39,"nodeType":"241","messageId":"242","endLine":5,"endColumn":52},{"ruleId":"243","replacedBy":"281"},{"ruleId":"245","replacedBy":"282"},{"ruleId":"239","severity":1,"message":"283","line":2,"column":37,"nodeType":"241","messageId":"242","endLine":2,"endColumn":47},{"ruleId":"239","severity":1,"message":"284","line":21,"column":11,"nodeType":"241","messageId":"242","endLine":21,"endColumn":18},{"ruleId":"239","severity":1,"message":"285","line":22,"column":12,"nodeType":"241","messageId":"242","endLine":22,"endColumn":17},{"ruleId":"239","severity":1,"message":"286","line":22,"column":19,"nodeType":"241","messageId":"242","endLine":22,"endColumn":27},{"ruleId":"259","severity":1,"message":"265","line":27,"column":7,"nodeType":"261","endLine":27,"endColumn":9,"suggestions":"287"},{"ruleId":"288","severity":1,"message":"289","line":53,"column":57,"nodeType":"290","messageId":"291","endLine":53,"endColumn":59},{"ruleId":"239","severity":1,"message":"254","line":61,"column":19,"nodeType":"241","messageId":"242","endLine":61,"endColumn":27},{"ruleId":"239","severity":1,"message":"292","line":3,"column":42,"nodeType":"241","messageId":"242","endLine":3,"endColumn":51},{"ruleId":"239","severity":1,"message":"293","line":3,"column":53,"nodeType":"241","messageId":"242","endLine":3,"endColumn":62},{"ruleId":"239","severity":1,"message":"292","line":3,"column":42,"nodeType":"241","messageId":"242","endLine":3,"endColumn":51},{"ruleId":"239","severity":1,"message":"293","line":3,"column":53,"nodeType":"241","messageId":"242","endLine":3,"endColumn":62},"no-unused-vars","'amountfunction' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["294"],"no-negated-in-lhs",["295"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'display'.","ArrowFunctionExpression","unsafeRefs","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'response' is assigned a value but never used.","'PropTypes' is defined but never used.",["294"],["295"],"'orderId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'items' and 'totalF'. Either include them or remove the dependency array.","ArrayExpression",["296"],["294"],["295"],"React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.",["297"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useAuth' is defined but never used.","'setIndex' is assigned a value but never used.",["298"],"no-use-before-define","'id' was used before it was defined.","usedBeforeDefined","'shippingCreate' is defined but never used.","'shippingEdit' is defined but never used.","'shippingList' is defined but never used.","'storeInfoCreate' is defined but never used.","'storeInfoEdit' is defined but never used.","'storeInfoList' is defined but never used.",["294"],["295"],"'EmailField' is defined but never used.","'history' is assigned a value but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.",["299"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'DateField' is defined but never used.","'DateInput' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"302","fix":"304"},{"desc":"302","fix":"305"},"Update the dependencies array to be: [items, totalF]",{"range":"306","text":"307"},"Update the dependencies array to be: [getUser]",{"range":"308","text":"309"},{"range":"310","text":"309"},{"range":"311","text":"309"},[1065,1067],"[items, totalF]",[469,471],"[getUser]",[1239,1241],[887,889]]