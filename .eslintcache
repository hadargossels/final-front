[{"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\index.js":"1","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\App.js":"2","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\store\\Store.js":"3","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\blog\\Blog.jsx":"4","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\shipping\\Shipping.jsx":"5","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\faq\\Faq.jsx":"6","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\home\\Home.jsx":"7","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\about\\About.jsx":"8","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\contact\\Contact.jsx":"9","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\footer\\Footer.js":"10","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\header\\Header.js":"11","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\notfound\\NotFound.jsx":"12","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\product\\Product.js":"13","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\login\\Login.jsx":"14","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\new\\New.jsx":"15","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\featured\\Featured.jsx":"16","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Cart\\Cart.jsx":"17","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\dropdown\\Dropdown.jsx":"18","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\payment\\Payment.jsx":"19","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\newAccount\\NewAccount.jsx":"20","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\newAccount\\Newaccount.jsx":"21","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Paypal.jsx":"22","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Success\\Success.jsx":"23","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\WishList\\WishList.jsx":"24","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Fail\\Fail.jsx":"25","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Post\\Post.jsx":"26","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Dashboard.jsx":"27","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Signup.jsx":"28","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\PrivateRoute.jsx":"29","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\ForgotPassword.jsx":"30","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Login.jsx":"31","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\UpdateProfile.jsx":"32","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\firebase.js":"33","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\AuthContext.jsx":"34","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\Administrator.jsx":"35","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\users.js":"36","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\posts.jsx":"37","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\DataProvider.jsx":"38","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\dataProvider.jsx":"39","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\product.js":"40"},{"size":3530,"mtime":1614705253349,"results":"41","hashOfConfig":"42"},{"size":280,"mtime":1612974842038,"results":"43","hashOfConfig":"42"},{"size":16629,"mtime":1613901821024,"results":"44","hashOfConfig":"42"},{"size":1153,"mtime":1613930746487,"results":"45","hashOfConfig":"42"},{"size":234,"mtime":1612424206211,"results":"46","hashOfConfig":"42"},{"size":1959,"mtime":1612467236274,"results":"47","hashOfConfig":"42"},{"size":416,"mtime":1612450590276,"results":"48","hashOfConfig":"42"},{"size":1144,"mtime":1612465544196,"results":"49","hashOfConfig":"42"},{"size":4093,"mtime":1613908396103,"results":"50","hashOfConfig":"42"},{"size":1568,"mtime":1613908417793,"results":"51","hashOfConfig":"42"},{"size":3073,"mtime":1614447838481,"results":"52","hashOfConfig":"42"},{"size":428,"mtime":1612466245936,"results":"53","hashOfConfig":"42"},{"size":5130,"mtime":1613929620765,"results":"54","hashOfConfig":"42"},{"size":2885,"mtime":1613483679617,"results":"55","hashOfConfig":"42"},{"size":6465,"mtime":1612794644325,"results":"56","hashOfConfig":"42"},{"size":6502,"mtime":1612794718187,"results":"57","hashOfConfig":"42"},{"size":9407,"mtime":1613908203680,"results":"58","hashOfConfig":"42"},{"size":2408,"mtime":1613481382621,"results":"59","hashOfConfig":"42"},{"size":10318,"mtime":1613655057739,"results":"60","hashOfConfig":"42"},{"size":230,"mtime":1613130234883,"results":"61","hashOfConfig":"42"},{"size":9753,"mtime":1613549355401,"results":"62","hashOfConfig":"42"},{"size":1153,"mtime":1613908263288,"results":"63","hashOfConfig":"42"},{"size":516,"mtime":1613467069380,"results":"64","hashOfConfig":"42"},{"size":987,"mtime":1613465522306,"results":"65","hashOfConfig":"42"},{"size":364,"mtime":1613466834334,"results":"66","hashOfConfig":"42"},{"size":4793,"mtime":1613931725847,"results":"67","hashOfConfig":"42"},{"size":2514,"mtime":1614939267921,"results":"68","hashOfConfig":"42"},{"size":6176,"mtime":1614938954601,"results":"69","hashOfConfig":"42"},{"size":741,"mtime":1614950558871,"results":"70","hashOfConfig":"42"},{"size":1972,"mtime":1614449453956,"results":"71","hashOfConfig":"42"},{"size":2147,"mtime":1614449397885,"results":"72","hashOfConfig":"42"},{"size":7026,"mtime":1614939216399,"results":"73","hashOfConfig":"42"},{"size":713,"mtime":1614842311709,"results":"74","hashOfConfig":"42"},{"size":2001,"mtime":1614510242754,"results":"75","hashOfConfig":"42"},{"size":1433,"mtime":1614946518129,"results":"76","hashOfConfig":"42"},{"size":2051,"mtime":1614939751108,"results":"77","hashOfConfig":"42"},{"size":485,"mtime":1614670992667,"results":"78","hashOfConfig":"42"},{"size":3310,"mtime":1614691875567,"results":"79","hashOfConfig":"42"},{"size":3310,"mtime":1614691875567,"results":"80","hashOfConfig":"42"},{"size":2539,"mtime":1614944355463,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},"navjt7",{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"85"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"85"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"85"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"85"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"85"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"85"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"85"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"85"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"85"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"85"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"85"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\index.js",["178","179","180","181"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n// import {Route,Switch, BrowserRouter as Router} from 'react-router-dom'\nimport './index.css';\nimport Header from './components/header/Header';\nimport App from './App';\nimport About from './components/about/About';\nimport Contact from './components/contact/Contact';\nimport NotFound from './components/notfound/NotFound';\nimport Footer from './components/footer/Footer';\nimport Store from './components/store/Store';\nimport Blog from './components/blog/Blog';\nimport Shipping from './components/shipping/Shipping'\nimport Faq from './components/faq/Faq'\nimport Product from './components/product/Product'\n// import Login from './components/login/Login'\nimport Cart from './components/Cart/Cart';\nimport Payment from './components/payment/Payment';\n// import Newaccount from './components/newAccount/Newaccount';\nimport WishList from './components/WishList/WishList';\nimport Post from './components/Post/Post';\nimport { AuthProvider } from \"./AuthContext\";\nimport Signup from \"./components/Signup\";\nimport Dashboard from './components/Dashboard'\nimport Login from './components/Login'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport ForgotPassword from \"./components/ForgotPassword\";\nimport UpdateProfile from \"./components/UpdateProfile\";\nimport Administrator from './components/admin/Administrator';\n\nlocalStorage.setItem(\"orderErr\",\"\")\nlocalStorage.setItem(\"orderId\",\"\")\n\nfunction setLocalStorage () {\n  if (localStorage.getItem(\"cart\") == undefined) {\n    localStorage.setItem(\"cart\",JSON.stringify([]))\n  }\n  if (localStorage.getItem(\"user\") == undefined) {\n    localStorage.setItem(\"user\",\"\")\n  }\n  if (localStorage.getItem(\"wishList\") == undefined) {\n    localStorage.setItem(\"wishList\",JSON.stringify([]))\n  }\n}\nsetLocalStorage()\n\nlet amount = 0;\nconst amountfunction = (amount) => {\n  let cart = JSON.parse(localStorage.getItem(\"cart\"))\n  return amount = cart.length\n\n} \nconsole.log(amount)\n\nconst router = (\n  <Router>\n    <AuthProvider>\n  <Header amount={amount}/>\n  <Switch>\n     <Route exact path=\"/\" component={App}/>\n     <Route path=\"/About\" component={About}/>\n     <Route path=\"/Contact\" component={Contact}/>\n     <Route exact path=\"/Store\" component={Store}/>\n     <Route exact path=\"/Store/New\" component={Store}/>\n     <Route exact path=\"/Store/Featured\" component={Store}/>\n     <Route exact path=\"/Blog\" component={Blog}/>\n     <Route path=\"/Shipping\" component={Shipping}/>\n     <Route path=\"/Faq\" component={Faq}/>\n     <Route path='/Admin' component={Administrator}/>\n     {/* <Route path=\"/Login\" component={Login}/> */}\n     <Route path=\"/Product/:productid\" component={Product}/>\n     <Route exact path = \"/Cart\" component={Cart}/>\n     <Route exact path = \"/Payment\" component={Payment}/>\n     {/* <Route exact path = \"/NewAccount\" component={Newaccount}/> */}\n     <Route exact path = \"/WishList\" component={WishList}/>\n     <Route exact path = \"/Post/:postid\" component={Post}/>\n     <PrivateRoute exact path=\"/Dashboard\" component={Dashboard}/>\n    <PrivateRoute exact path=\"/update-profile\" component={UpdateProfile}/>\n    <Route exact path='/signup' component={Signup}/>\n    <Route exact path='/login' component={Login}/>\n    <Route exact path='/forgot-password' component={ForgotPassword}/>\n     <Route component={NotFound}/>\n  </Switch>\n  <Footer/>\n  </AuthProvider>\n  </Router>\n)\n\nReactDOM.render(\n  router,\n  document.getElementById('root')\n);\n\n",["182","183"],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\App.js",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\store\\Store.js",["184","185","186","187","188","189"],"import React, { Component } from 'react';\r\nimport './Store.css';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst axios = require('axios').default;\r\n\r\n let product = []\r\n\r\nclass Store extends Component{\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      product: product,\r\n      display: product,\r\n      checked: [],\r\n      searchKey: \"\",\r\n      results: [],\r\n      filterDis: \"flex\",\r\n      storeDis: \"flex\",\r\n      errorDis: \"none\",\r\n      cart: JSON.parse(localStorage.getItem(\"cart\")),\r\n      addMsg: \"\",\r\n      wishList: JSON.parse(localStorage.getItem(\"wishList\")),\r\n    }\r\n    this.isChecked = this.isChecked.bind(this);\r\n    this.filter = this.filter.bind(this);\r\n    this.searchK = this.searchK.bind(this);\r\n    this.search = this.search.bind(this);\r\n    this.addToCart = this.addToCart.bind(this);\r\n    this.addToWish = this.addToWish.bind(this);\r\n    this.searchK()\r\n    this.newFeatured()\r\n      }\r\n\r\ncomponentWillMount () {\r\n  this.getStore()\r\n}\r\n\r\nasync getStore() {\r\n  try {\r\n    const response = await axios.get('http://localhost:3000/store');\r\n    product = response.data;\r\n    this.setState({product, display: product})\r\n    console.log(product);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n\r\n    addMsg () {\r\n      setTimeout(()=>{this.setState({addMsg: \"Item added to cart\"})},5)\r\n      setTimeout(()=>{this.setState({addMsg: \"\"})},10000)\r\n    }\r\n\r\n    addToCart (e) {\r\n      \r\n      let itemId = e.target.id\r\n      let quantity = e.target.previousElementSibling.value\r\n      let cart = [];\r\n      if (this.state.cart !== null) {\r\n        cart = [...this.state.cart]\r\n      }\r\n      let src = e.target.parentNode.parentNode.parentNode.childNodes[0].childNodes[0].src\r\n      src = src.substring(21)\r\n      let name = e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].innerText\r\n      let price = e.target.parentNode.parentNode.parentNode.parentNode.childNodes[2].childNodes[0].childNodes[1].innerText\r\n      price = price.substring(0, price.length-1)\r\n      let flag = true\r\n      if (cart.length > 0){\r\n         for (const element of cart) {\r\n            if (element.itemId === itemId) {\r\n               flag = false\r\n               let elQu = element.quantity\r\n               elQu = parseInt(elQu)\r\n               elQu = elQu + parseInt(quantity)\r\n               element.quantity = elQu\r\n            }\r\n         }\r\n      }\r\n      if (flag == true) {\r\n         let cartObj = {itemId: itemId, quantity: quantity, src: src, name: name, price: price}\r\n         cart.push(cartObj)\r\n      }\r\n      \r\n      setTimeout(()=>{this.setState({cart})\r\n      localStorage.setItem(\"cart\",JSON.stringify(cart));\r\n      this.addMsg();},5);\r\n      \r\n    }\r\n\r\n    addToWish (e) {\r\n      if (e.target.style.color !== 'red') {\r\n      e.target.style.color = 'red'\r\n      let itemId = e.target.id\r\n      let src = e.target.parentNode.parentNode.parentNode.childNodes[0].childNodes[0].src\r\n      src = src.substring(21)\r\n      let price = e.target.parentNode.parentNode.parentNode.parentNode.childNodes[2].childNodes[0].childNodes[1].innerText\r\n      price = price.substring(0, price.length-1)\r\n      let name = e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].innerText\r\n      let wishList = JSON.parse(localStorage.getItem(\"wishList\"))\r\n\r\n      let wishListObj = {itemId: itemId, src: src, name: name, price: price}\r\n      wishList.push(wishListObj)\r\n      setTimeout(()=>{this.setState({wishList})\r\n      localStorage.setItem(\"wishList\",JSON.stringify(wishList));},5);\r\n      }\r\n\r\n      else {\r\n        e.target.style.color = 'black'\r\n        let itemId = e.target.id\r\n        let wishList = JSON.parse(localStorage.getItem(\"wishList\"))\r\n        wishList = wishList.filter((v)=> {return v.itemId !== itemId})\r\n        setTimeout(()=>{this.setState({wishList})\r\n      localStorage.setItem(\"wishList\",JSON.stringify(wishList));},5);\r\n      }\r\n      \r\n      \r\n      \r\n    }\r\n\r\n    newFeatured () {\r\n      let path = this.props.location.pathname\r\n      path = path.substring(7);\r\n      if (path === 'New') {\r\n        this.state.product.sort((a, b) => b.date - a.date)\r\n      }\r\n      else if (path === 'Featured')\r\n      this.state.product.sort((a, b) => b.featured - a.featured)\r\n\r\n      else this.state.product.sort((a, b) => a.id - b.id)\r\n    }\r\n    \r\n    sort (e) {\r\n      let byPrice =  this.state.product\r\n      if (e.target.value === 'high')\r\n      byPrice.sort((a, b) => b.price - a.price);\r\n      else if (e.target.value === 'low')\r\n      byPrice.sort((a, b) => a.price - b.price);\r\n      this.setState({product: byPrice})\r\n    }\r\n\r\n    isChecked (e) {\r\n      this.search()\r\n      let checkbox = e.target.value\r\n      let checkedBox =[...this.state.checked]\r\n      if(e.target.checked){\r\n        checkedBox.push(checkbox)\r\n      }\r\n      else {\r\n        checkedBox = checkedBox.filter((v)=>{\r\n          return v !== checkbox\r\n        })\r\n      } \r\n      setTimeout(()=>{this.setState({checked: checkedBox})\r\n    this.setState({display: []});\r\n    this.filter(e)},5) \r\n    }\r\n\r\n    filter (e) {\r\n      let display = [...this.state.display];\r\n      let filterThat = [...this.state.product];\r\n      let filtered = [];\r\n      let name = e.target.name\r\n      let filterby = [...this.state.checked]\r\n      \r\n      if (name === 'category'){\r\n        for (let i = 0; i<filterby.length; i++){\r\n          filtered = filterThat.filter((v)=> {return v.category === filterby[i]}) \r\n          filtered.forEach(element => {display.push(element)});         \r\n        }\r\n      }\r\n      else if (name === 'brands'){\r\n        for (let i = 0; i<filterby.length; i++){\r\n          filtered = filterThat.filter((v)=> {return v.brand === filterby[i]}) \r\n          filtered.forEach(element => {display.push(element)});         \r\n        }\r\n      }\r\n      else if (name === 'color'){\r\n        for (let i = 0; i<filterby.length; i++){\r\n          filtered = filterThat.filter((v)=> {return v.color === filterby[i]}) \r\n          filtered.forEach(element => {display.push(element)});         \r\n        }\r\n      }\r\n      else if (name === 'priceRange'){\r\n        console.log(name)\r\n        for (let i = 0; i<filterby.length; i++){\r\n          filtered = filterThat.filter((v)=> {return v.priceRange === filterby[i]}) \r\n          filtered.forEach(element => {display.push(element)});         \r\n        }\r\n      }\r\n      \r\n      if (display.length === 0 && this.state.searchKey == \"\") {\r\n        display = product\r\n      }\r\n      else if (display.length === 0 && this.state.searchKey !== \"\") {\r\n        \r\n        display = [...this.state.results]\r\n      }\r\n      setTimeout(()=>{\r\n        this.setState({display: display})\r\n      },5)\r\n    }\r\n\r\n    searchK () {\r\n      let searchKey = this.props.location.search\r\n      searchKey = searchKey.substring(3);\r\n      setTimeout(() => {\r\n        this.setState({searchKey: searchKey})\r\n        this.search()\r\n      }, 5);\r\n    }\r\n\r\n    search() {\r\n      if (this.state.searchKey !== \"\") {\r\n        let display = [];\r\n        let results = [];\r\n        let re = new RegExp (this.state.searchKey, \"g\")\r\n        for (const element of product) {\r\n        if (re.test(element.name) || re.test(element.description)){\r\n          console.log(re.test(element.name))\r\n          display.push(element);\r\n          results.push(element);\r\n        }\r\n        }\r\n        if (results.length === 0) {\r\n          setTimeout(()=>{\r\n            this.setState({filterDis: \"none\"})\r\n          this.setState({storeDis: \"none\"})\r\n          this.setState({errorDis: \"flex\"})\r\n          console.log(this.state.storeDis)\r\n          },5)\r\n        }\r\n        console.log(this.state.searchKey)\r\n      console.log(this.state.results.length)\r\n        setTimeout(()=>{\r\n          this.setState({display: display})\r\n          this.setState({results:results})\r\n        },5)\r\n      }\r\n    }\r\n\r\n    \r\n \r\n\r\n   render(){\r\n      return(\r\n          <div className='storeCont'>\r\n            <div className=\"searchErr\" style={{display: this.state.errorDis}}>Sorry, your search didn't match any results, please try searching something else.</div>\r\n              <div className='filter' style={{display: this.state.filterDis}}>\r\n                  <div className='sort filterDiv'>\r\n                      <span className='title'>Sort By:</span><br/>\r\n                      <select className='sortSel' onChange={(e) => this.sort(e)}>\r\n                          <option value='low'>Price: Low - High</option>\r\n                          <option value='high'>Price: High - Low</option>\r\n                      </select>\r\n                  </div>\r\n                  <div className='category filterDiv'>\r\n                  <span className='title'>Category:</span><br/>\r\n                    <input type=\"checkbox\" id=\"pens\" name=\"category\" value=\"pens\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"pens\"> Pens</label><br/>\r\n                    <input type=\"checkbox\" id=\"pencils\" name=\"category\" value=\"pencils\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"pencils\"> Pencils</label><br/>\r\n                    <input type=\"checkbox\" id=\"diaries\" name=\"category\" value=\"diaries\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"diaries\"> Diaries & Planners</label><br/>\r\n                    <input type=\"checkbox\" id=\"notebooks\" name=\"category\" value=\"notebooks\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"notebooks\"> Notebooks & Pads</label><br/>\r\n                    <input type=\"checkbox\" id=\"school\" name=\"category\" value=\"school\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"school\"> School & Office Supplies</label><br/>\r\n                    <input type=\"checkbox\" id=\"folders\" name=\"folders\" value=\"folders\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"folders\"> Filing & Folders</label><br/>\r\n                  </div>\r\n                  <div className='brands filterDiv'>\r\n                  <span className='title'>Brands:</span><br/>\r\n                    <input type=\"checkbox\" id=\"brandA\" name=\"brands\" value=\"brandA\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"brandA\"> brandA</label><br/>\r\n                    <input type=\"checkbox\" id=\"brandB\" name=\"brands\" value=\"brandB\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"brandB\"> brandB</label><br/>\r\n                    <input type=\"checkbox\" id=\"brandC\" name=\"brands\" value=\"brandC\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"brandC\"> brandC</label><br/>\r\n                    <input type=\"checkbox\" id=\"brandD\" name=\"brands\" value=\"brandD\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"brandD\"> brandD</label><br/>\r\n                  </div>\r\n                  <div className='color filterDiv'>\r\n                  <span className='title'>Color:</span><br/>\r\n                    <input type=\"checkbox\" id=\"black\" name=\"color\" value=\"black\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"black\"> Black</label><br/>\r\n                    <input type=\"checkbox\" id=\"white\" name=\"color\" value=\"white\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"white\">White</label><br/>\r\n                    <input type=\"checkbox\" id=\"purple\" name=\"color\" value=\"purple\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"purple\"> Purple</label><br/>\r\n                    <input type=\"checkbox\" id=\"blue\" name=\"color\" value=\"blue\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"blue\"> Blue</label><br/>\r\n                    <input type=\"checkbox\" id=\"green\" name=\"color\" value=\"green\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"green\"> Green</label><br/>\r\n                    <input type=\"checkbox\" id=\"yellow\" name=\"color\" value=\"yellow\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"yellow\"> Yellow</label><br/>\r\n                    <input type=\"checkbox\" id=\"orange\" name=\"color\" value=\"orange\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"orange\"> Orange</label><br/>\r\n                    <input type=\"checkbox\" id=\"red\" name=\"color\" value=\"red\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"red\"> Red</label><br/>\r\n                    <input type=\"checkbox\" id=\"pink\" name=\"color\" value=\"pink\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"pink\"> Pink</label><br/>\r\n                    <input type=\"checkbox\" id=\"multi\" name=\"color\" value=\"multi\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"multi\">Multi</label><br/>\r\n                  </div>\r\n                  <div className='price filterDiv'>\r\n                  <span className='title'>Price:</span><br/>\r\n                    <input type=\"checkbox\" id=\"0-10\" name=\"priceRange\" value=\"0-10\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"0-10\">0-10 USD</label><br/>\r\n                    <input type=\"checkbox\" id=\"11-20\" name=\"priceRange\" value=\"11-20\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"11-20\">11-20 USD</label><br/>\r\n                    <input type=\"checkbox\" id=\"21-30\" name=\"priceRange\" value=\"21-30\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"21-30\">21-30 USD</label><br/>\r\n                    <input type=\"checkbox\" id=\"31-40\" name=\"priceRange\" value=\"31-40\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"31-40\">31-40 USD</label><br/>\r\n                    <input type=\"checkbox\" id=\"41-50\" name=\"priceRange\" value=\"41-50\" onChange={(e) => this.isChecked(e)}/>\r\n                    <label htmlFor=\"41-50\">41-50 USD</label><br/>\r\n                  </div>\r\n              </div>\r\n              <div className='storeDisp' style={{display: this.state.storeDis}}>\r\n              {this.state.display.map((v) =>\r\n              <div key={\"divkey\"+v.id}>\r\n                <div className='product' productid={v.id}>\r\n                    <NavLink exact to={\"/Product/\"+v.id} ><img src={v.src} alt='product' width='180px'/></NavLink><br/>\r\n                    <span className='prodName' style={{fontSize:\"20px\"}}>{v.name}</span><br/>\r\n                    <span className='price'>{v.price}$</span><br/>\r\n                    <button type=\"button\" className='fas fa-search-plus' data-bs-toggle=\"modal\" data-bs-target={\"#modal\"+v.id+\"\"}></button>\r\n                </div>\r\n                <div className=\"modal fade\" id={\"modal\"+v.id+\"\"} tabIndex=\"-1\" aria-labelledby={\"exampleModalLabel\"+v.id} aria-hidden=\"true\">\r\n                  <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                        <h5 className=\"modal-title\" id={\"exampleModalLabel\"+v.id}>{v.name}</h5>\r\n                        <div className=\"modCon\">\r\n                        <div className=\"modLeft\">\r\n                          <img src={v.src} alt='product' width='200px'/>\r\n                          <span>{v.price}$</span>\r\n                        </div>\r\n                        <div className=\"modRight\">\r\n                          <p>{v.description}</p>\r\n                          <div className='buy'>\r\n                            <select className='qt'>\r\n                                <option value=\"1\">1</option>\r\n                                <option value=\"2\">2</option>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                                <option value=\"5\">5</option>\r\n                                <option value=\"6\">6</option>\r\n                                <option value=\"7\">7</option>\r\n                            </select>\r\n                            <button className='addcart' id={v.id} onClick={this.addToCart}>ADD TO CART</button>\r\n                            <button className='fas fa-heart addWish' id={v.id} onClick={this.addToWish}></button>\r\n                          </div>\r\n                          <span className='addMsg'>{this.state.addMsg}</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>)}                  \r\n              </div>\r\n          </div>\r\n        \r\n\r\n      );\r\n   }\r\n  }\r\n\r\nexport default Store;\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\blog\\Blog.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\shipping\\Shipping.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\faq\\Faq.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\home\\Home.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\about\\About.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\contact\\Contact.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\footer\\Footer.js",["190","191","192"],"import React, { Component } from 'react';\r\nimport './Footer.css';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nclass Footer extends Component{\r\n   render(){\r\n      return(\r\n         <div className='foot'>\r\n            <div className='info'> INFO <br/>\r\n            <NavLink exact to=\"/\" activeStyle={{color:\"white\"}} className='infolink'>HOME</NavLink>\r\n            <NavLink exact to=\"/Faq\" activeStyle={{color:\"white\"}} className='infolink'>FAQ</NavLink>\r\n            <NavLink exact to=\"/Shipping\" activeStyle={{color:\"white\"}} className='infolink'>SHIPPING & RETURNS</NavLink>\r\n            <NavLink exact to=\"/Contact\" activeStyle={{color:\"white\"}} className='infolink'>CONTACT US</NavLink>\r\n            </div>\r\n            <div className='newsletter'>\r\n               <form>\r\n                  <label htmlFor=\"email\">SIGN UP FOR UPDATES</label><br/><br/>\r\n                  <input type=\"email\" id=\"email\" name=\"email\"></input>\r\n                  <input type=\"submit\" id=\"subs\" value=\"SUBSCRIBE\"></input>\r\n               </form>\r\n            </div>\r\n            <div className='social'>\r\n               <div>\r\n               <a href=\"https://www.facebook.com/\" className=\"fab fa-facebook-square socialmedia\"></a>\r\n               <a href=\"https://www.instagram.com/\" className=\"fab fa-instagram socialmedia\"></a>\r\n               <a href=\"https://twitter.com/twitter\" className=\"fab fa-twitter-square socialmedia\"></a>\r\n               </div>\r\n               <small>© 2021, Shop</small>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\nexport default Footer;\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\header\\Header.js",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\notfound\\NotFound.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\product\\Product.js",["193","194"],"import React, { Component } from 'react';\r\nimport './Product.css';\r\nimport axios from 'axios'\r\n\r\nclass Product extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      product: [],\r\n      i: 0,\r\n      cart: JSON.parse(localStorage.getItem(\"cart\")),\r\n      addMsg: \"\"\r\n    }\r\n    this.findIndex = this.findIndex.bind(this);\r\n    this.addToCart = this.addToCart.bind(this);\r\n   this.findIndex()\r\n   \r\n      }\r\n\r\n\r\n      componentDidMount () {\r\n         this.getProduct();\r\n      }\r\n\r\n\r\n      \r\n      async getProduct() {\r\n      try {\r\n         const response = await axios.get('http://localhost:3000/product');\r\n         console.log(\"response from db\",response.data);\r\n         this.setState({product: response.data}, () => {\r\n            this.findIndex()\r\n            console.log(\"data from db\",this.state.product)\r\n         });\r\n         \r\n         \r\n      } catch (error) {\r\n         console.error(error);\r\n      }\r\n      }\r\n\r\n   addMsg () {\r\n      setTimeout(()=>{this.setState({addMsg: \"Item added to cart\"})},5)\r\n      setTimeout(()=>{this.setState({addMsg: \"\"})},10000)\r\n      }\r\n\r\n   findIndex () {\r\n      let i = 0;\r\n      for (const element of this.state.product) {\r\n         if (this.props.match.params.productid == element.id)\r\n         {i = element.id - 1; }\r\n      }\r\n      setTimeout(()=>\r\n      {this.setState({i}); console.log(this.state.i)},5) \r\n   }\r\n\r\n   addToCart (e) {\r\n      let itemId = e.target.id\r\n      let quantity = e.target.previousElementSibling.value\r\n      console.log(this.state.cart)\r\n      let cart = [];\r\n      if (this.state.cart !== null) {\r\n        cart = [...this.state.cart]\r\n      }\r\n      let src = e.target.parentNode.parentNode.parentNode.childNodes[0].childNodes[0].childNodes[0].src\r\n      src = src.substring(21)\r\n      let name = e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[1].childNodes[0].innerText\r\n      let price = e.target.parentNode.parentNode.parentNode.parentNode.childNodes[1].childNodes[1].childNodes[5].innerText\r\n      price = price.substring(7, price.length-1)\r\n      let flag = true\r\n      if (cart.length > 0){\r\n         for (const element of cart) {\r\n            if (element.itemId === itemId) {\r\n               flag = false\r\n               let elQu = element.quantity\r\n               elQu = parseInt(elQu)\r\n               elQu = elQu + parseInt(quantity)\r\n               element.quantity = elQu\r\n            }\r\n         }\r\n      }\r\n      if (flag == true) {\r\n         let cartObj = {itemId: itemId, quantity: quantity, src: src, name: name, price: price}\r\n         cart.push(cartObj)\r\n      }\r\n      \r\n      \r\n      setTimeout(()=>{this.setState({cart})\r\n      localStorage.setItem(\"cart\",JSON.stringify(cart));\r\n      this.addMsg()\r\n   },5)\r\n    }\r\n   \r\n   \r\n   render() {\r\n      return (this.state.product[this.state.i]) ? (\r\n         <div className='prodCont'>\r\n         <div className='prodImg'>\r\n            <div className='mainImg'>\r\n               <img src={this.state.product[this.state.i].src} alt=\"product\" />\r\n            </div>\r\n            <div className=\"gallery\">\r\n               <img src={this.state.product[this.state.i].gallery1} alt=\"product\" />\r\n               <img src={this.state.product[this.state.i].gallery2} alt=\"product\" />\r\n               <img src={this.state.product[this.state.i].gallery3} alt=\"product\" />\r\n            </div>\r\n         </div>\r\n\r\n         <div className=\"prodDec\">\r\n            <span className=\"headline\">{this.state.product[this.state.i].name}</span><br />\r\n            <span className=\"rating\">{this.state.product[this.state.i].rating}/5 {this.state.product[this.state.i].raters} Ratings</span><br /><br />\r\n            <span className=\"price\">Price: {this.state.product[this.state.i].price}$</span><br /><br />\r\n            <span className=\"description\">{this.state.product[this.state.i].description}</span><br /><br />\r\n            <span className='stock'>{this.state.product[this.state.i].stock}</span><br /><br />\r\n            <div className='buy'>\r\n               <select className='qt'>\r\n                  <option value=\"1\">1</option>\r\n                  <option value=\"2\">2</option>\r\n                  <option value=\"3\">3</option>\r\n                  <option value=\"4\">4</option>\r\n                  <option value=\"5\">5</option>\r\n                  <option value=\"6\">6</option>\r\n                  <option value=\"7\">7</option>\r\n               </select>\r\n               <button className='addcart' onClick={this.addToCart} id={this.state.product[this.state.i].id}>ADD TO CART</button>\r\n            </div><br />\r\n            <span className='addMsg'>{this.state.addMsg}</span><br />\r\n            <span>RELATED ITEMS</span>\r\n            <div className='related'>\r\n               <img src={this.state.product[this.state.i].related1} alt=\"product\" />\r\n               <img src={this.state.product[this.state.i].related2} alt=\"product\" />\r\n               <img src={this.state.product[this.state.i].related3} alt=\"product\" />\r\n            </div>\r\n         </div>\r\n      </div>\r\n      ) : (<div>Loading...</div>)\r\n   }\r\n}\r\nexport default Product;\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\login\\Login.jsx",["195","196"],"import React, { Component } from 'react'\r\nimport './Login.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst users = [\r\n    {username: \"user1\", email: \"user1@email.com\", password: \"a123456\"},\r\n    {username: \"user2\", email: \"user2@email.com\", password: \"b123456\"},\r\n    {username: \"user3\", email: \"user3@email.com\", password: \"c123456\"},\r\n    {username: \"user4\", email: \"user4@email.com\", password: \"d123456\"}\r\n]\r\n\r\n\r\n\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            emailMsg: 'none',\r\n            passMsg: 'none',\r\n            success: 'none',\r\n            login: 'block',\r\n            username: \"\"\r\n\r\n        }\r\n        \r\n    }\r\n    validate (e) {\r\n        e.preventDefault()\r\n        let email = e.target.childNodes[2].value\r\n        let password = e.target.childNodes[8].value\r\n        for (const element of users) {\r\n            if (element.email == email && element.password == password) {\r\n                \r\n                setTimeout(()=>{this.setState({success: \"block\",login: \"none\", username:element.username })\r\n                localStorage.setItem(\"user\",element.username)\r\n            window.location.reload()},5)\r\n            }\r\n            else if (element.email !== email) {\r\n                setTimeout(()=>{this.setState({emailMsg: \"block\"})},5)\r\n            }\r\n            else if (element.password !== password) {\r\n                setTimeout(()=>{this.setState({passMsg: \"block\"})},5)\r\n            }           \r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{display: this.state.success}} className='hello'>Hello, {this.state.username}<br/>\r\n                <NavLink exact to=\"/\"><button>Back to homepage</button></NavLink></div>\r\n                <div className=\"login\" style={{display: this.state.login}}>\r\n                    <h1 style={{display: this.props.visibilty}}>LOGIN</h1>\r\n                    <form action=\"\" onSubmit={(e)=>{this.validate(e)}}>\r\n                    <label htmlFor=\"email\">Email:</label><br/>\r\n                    <input type=\"email\" id=\"emaillog\" name=\"email\"/><br/>\r\n                    <span style={{display: this.state.emailMsg}} className=\"validMsg\">Invalid Email</span><br/>\r\n                    <label htmlFor=\"password\">Password:</label><br/>\r\n                    <input type=\"text\" id=\"password\" name=\"password\"/><br/>\r\n                    <span style={{display: this.state.passMsg}} className=\"validMsg\">Invalid Password</span><br/><br/>\r\n                    <span>Forgot your password?</span><br/><br/>\r\n                    <input type=\"submit\" id=\"sublog\" value=\"LOG IN\"></input><br/><br/>\r\n                    <NavLink exact to=\"/NewAccount\">Create account</NavLink>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Login\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\new\\New.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\featured\\Featured.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Cart\\Cart.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\dropdown\\Dropdown.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\payment\\Payment.jsx",["197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214"],"import React, {Component} from 'react'\r\nimport Dropdown from '../dropdown/Dropdown'\r\nimport Login from '../login/Login'\r\nimport Paypal from '../Paypal'\r\nimport Success from '../Success/Success'\r\nimport Fail from '../Fail/Fail'\r\nimport './Payment.css'\r\n\r\nexport class Payment extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            payment: true,\r\n            shippingInfo: [],\r\n            email: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email1: \"\",\r\n            phone: \"\",\r\n            country: \"\",\r\n            city: \"\",\r\n            address: \"\",\r\n            zip: \"\",\r\n            paypal: true\r\n\r\n        }\r\n        console.log(this.state.shippingInfo)\r\n    }\r\n\r\n    shipping (e) {\r\n        e.preventDefault()\r\n        let shippingInfo = []\r\n        for (let i =0; i<4; i++) {\r\n            for (let j=0; j<2; j++) {\r\n                let titel = e.target.childNodes[3].childNodes[0].childNodes[i].childNodes[j].childNodes[0].innerText\r\n                let value = e.target.childNodes[3].childNodes[0].childNodes[i].childNodes[j].childNodes[2].value\r\n                let shippingObject = {titel, value}\r\n                shippingInfo.push(shippingObject)\r\n            }\r\n        }\r\n        let note = e.target.childNodes[3].childNodes[0].childNodes[4].childNodes[0].childNodes[2].value\r\n        let noteObj = {title: 'note', value: note}\r\n        shippingInfo.push(noteObj)\r\n\r\n        let email = e.target.childNodes[3].childNodes[0].childNodes[1].childNodes[0].childNodes[2].value\r\n        setTimeout(()=>{this.setState({shippingInfo, email, paypal: false})},5)\r\n    }\r\n\r\n    validate (e) {\r\n        if (e.target.id === 'firstName') {\r\n            var patt = /[0-9]+/gm\r\n            var value = e.target.value\r\n            var res = patt.test(value);\r\n            console.log(res)\r\n            console.log(value)\r\n            if (res === true || value === \"\") {\r\n                setTimeout(()=>{this.setState({firstName: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({firstName: 'is-valid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'lastName') {\r\n            var patt = /[0-9]+/gm\r\n            var value = e.target.value\r\n            var res = patt.test(value);\r\n            console.log(res)\r\n            console.log(value)\r\n            if (res === true || value === \"\") {\r\n                setTimeout(()=>{this.setState({lastName: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({lastName: 'is-valid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'email1') {\r\n            var patt = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/gm\r\n            var value = e.target.value\r\n            var res = patt.test(value);\r\n            console.log(res)\r\n            console.log(value)\r\n            if (res === true) {\r\n                setTimeout(()=>{this.setState({email1: 'is-valid'});},5)\r\n            }\r\n            else if (res === false || value === \"\") {\r\n                setTimeout(()=>{this.setState({email1: 'is-invalid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'phone1') {\r\n            var patt = /[a-z,A-Z]+/gm\r\n            var value = e.target.value\r\n            var res = patt.test(value);\r\n            console.log(res)\r\n            console.log(value)\r\n            if (res === true || value === \"\" || value.length < 10) {\r\n                setTimeout(()=>{this.setState({phone: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({phone: 'is-valid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'country') {\r\n            var patt = /[0-9]+/gm\r\n            var value = e.target.value\r\n            var res = patt.test(value);\r\n            console.log(res)\r\n            console.log(value)\r\n            if (res === true || value === \"\") {\r\n                setTimeout(()=>{this.setState({country: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({country: 'is-valid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'city') {\r\n            var patt = /[0-9]+/gm\r\n            var value = e.target.value\r\n            var res = patt.test(value);\r\n            console.log(res)\r\n            console.log(value)\r\n            if (res === true || value === \"\") {\r\n                setTimeout(()=>{this.setState({city: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({city: 'is-valid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'address') {\r\n            if (value === \"\") {\r\n                setTimeout(()=>{this.setState({address: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({address: 'is-valid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'zip') {\r\n            var patt = /[a-z,A-Z]+/gm\r\n            var value = e.target.value\r\n            var res = patt.test(value);\r\n            console.log(res)\r\n            console.log(value)\r\n            if (res === true || value === \"\") {\r\n                setTimeout(()=>{this.setState({zip: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({zip: 'is-valid'});},5)\r\n            } \r\n        }\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <div className='payCont'>\r\n                    <div className=\"summery\">\r\n                        <h3>Summery</h3>\r\n                        <Dropdown/>\r\n                    </div>\r\n                    {localStorage.getItem(\"user\").length === 0 ? <div>\r\n                        <h3>Sign in to proceed</h3>\r\n                        <Login/>\r\n                    </div> : null}\r\n                    {localStorage.getItem(\"user\").length > 0 ? \r\n                    <div className=\"shippingI\">\r\n                        <form onSubmit={(e)=>{this.shipping(e)}}>\r\n                        <h3>Shipping information</h3><br/>\r\n                        <span style={{color: 'red'}}>* required</span>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td><label htmlFor=\"firstName\" className=\"form-label\">First name *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.firstName} onChange={(e)=>{this.validate(e)}} id=\"firstName\" required/></td>\r\n                                <td><label htmlFor=\"lastName\" className=\"form-label\">Last name *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.lastName} onChange={(e)=>{this.validate(e)}} id=\"lastName\" required/></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><label htmlFor=\"email1\" className=\"form-label\">Email *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.email1} onChange={(e)=>{this.validate(e)}} id=\"email1\" required/></td>\r\n                                <td><label htmlFor=\"phone1\" className=\"form-label\">Phone</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.phone} onChange={(e)=>{this.validate(e)}} id=\"phone1\" required/></td>\r\n                            </tr>\r\n                            <tr>\r\n                            <td><label htmlFor=\"country\" className=\"form-label\">Country *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.country} onChange={(e)=>{this.validate(e)}} id=\"country\" required/></td>\r\n                                <td><label htmlFor=\"city\" className=\"form-label\">City *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.city} onChange={(e)=>{this.validate(e)}} id=\"city\" required/></td>\r\n                            </tr>\r\n                            <tr>\r\n                            <td><label htmlFor=\"address\" className=\"form-label\">Address *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.address} onChange={(e)=>{this.validate(e)}} id=\"address\" required/></td>\r\n                                <td><label htmlFor=\"zip\" className=\"form-label\">Zip *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.zip} onChange={(e)=>{this.validate(e)}} id=\"zip\" required/></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td colSpan='2'><label htmlFor=\"notesarea\">Notes:</label><br/>\r\n                                <textarea className='form-control' id=\"notesarea\" name=\"notesarea\" rows=\"4\" cols=\"55\"></textarea></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"shippingI\">\r\n                        <input type=\"submit\" className='payBtn' value=\"Submit your shipping information\"/>\r\n                    </div>\r\n                    </form><br/>\r\n                    <div><h3>Payment method:</h3> <br/>\r\n                        <Paypal/></div>\r\n                    <button  className='payBtn' data-bs-toggle=\"modal\" data-bs-target={\"#modalPay\"} disabled={this.state.paypal}>Submit your order</button>\r\n                    <div className=\"modal fade\" id={\"modalPay\"} tabIndex=\"-1\" aria-labelledby={\"exampleModalLabel\"} aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                            <div>\r\n                                {localStorage.getItem(\"orderErr\").length === 0 ? <Success email={this.state.email}/> : <Fail/>}\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    : null}\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Payment\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\newAccount\\NewAccount.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\newAccount\\Newaccount.jsx",["215"],"import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport './Newaccount.css'\r\nimport Login from '../login/Login';\r\n\r\nexport class Newaccount extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            accountInfo: [],\r\n            email: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email1: \"\",\r\n            phone: \"\",\r\n            country: \"\",\r\n            city: \"\",\r\n            address: \"\",\r\n            zip: \"\",\r\n            password1: \"\",\r\n            password2: \"\",\r\n            password: \"\",\r\n            username: \"\",\r\n            finished: false\r\n        }  \r\n    }\r\n\r\n    accountDetails (e) {\r\n        e.preventDefault()\r\n        console.log(e.target.childNodes[3].childNodes[0].childNodes[0].childNodes[0].childNodes[0].innerText);\r\n        let accountInfo = []\r\n        for (let i =0; i<5; i++) {\r\n            for (let j=0; j<2; j++) {\r\n                let titel = e.target.childNodes[3].childNodes[0].childNodes[i].childNodes[j].childNodes[0].innerText\r\n                \r\n                let value = e.target.childNodes[3].childNodes[0].childNodes[i].childNodes[j].childNodes[2].value\r\n                let accountObj = {titel, value}\r\n                accountInfo.push(accountObj)\r\n            }\r\n        }\r\n\r\n        let username = e.target.childNodes[3].childNodes[0].childNodes[1].childNodes[0].childNodes[2].value\r\n        let patt = /[^@]+/gm\r\n        username = patt.exec(username);\r\n        username = username[0]\r\n        setTimeout(()=>{this.setState({accountInfo, username, finished: true})},5)\r\n    }\r\n\r\n    validate (e) {\r\n        let patt = \"\"\r\n        let value = \"\"\r\n        let res = \"\"\r\n        if (e.target.id === 'firstName') {\r\n            patt = /[0-9]+/gm\r\n            value = e.target.value\r\n            res = patt.test(value);\r\n            if (res === true || value === \"\") {\r\n                setTimeout(()=>{this.setState({firstName: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({firstName: 'is-valid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'lastName') {\r\n            patt = /[0-9]+/gm\r\n            value = e.target.value\r\n            res = patt.test(value);\r\n            if (res === true || value === \"\") {\r\n                setTimeout(()=>{this.setState({lastName: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({lastName: 'is-valid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'email1') {\r\n            patt = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/gm\r\n            value = e.target.value\r\n            res = patt.test(value);\r\n            if (res === true) {\r\n                setTimeout(()=>{this.setState({email1: 'is-valid'});},5)\r\n            }\r\n            else if (res === false || value === \"\") {\r\n                setTimeout(()=>{this.setState({email1: 'is-invalid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'phone1') {\r\n            patt = /[a-z,A-Z]+/gm\r\n            value = e.target.value\r\n            res = patt.test(value);\r\n            if (res === true || value === \"\" || value.length < 10) {\r\n                setTimeout(()=>{this.setState({phone: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({phone: 'is-valid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'country') {\r\n            patt = /[0-9]+/gm\r\n            value = e.target.value\r\n            res = patt.test(value);\r\n            if (res === true || value === \"\") {\r\n                setTimeout(()=>{this.setState({country: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({country: 'is-valid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'city') {\r\n            patt = /[0-9]+/gm\r\n            value = e.target.value\r\n            res = patt.test(value);\r\n            if (res === true || value === \"\") {\r\n                setTimeout(()=>{this.setState({city: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({city: 'is-valid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'address') {\r\n            value = e.target.value\r\n            if (value === \"\") {\r\n                setTimeout(()=>{this.setState({address: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({address: 'is-valid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'password1') {\r\n            \r\n            value = e.target.value\r\n            if (value.length < 8) {\r\n                setTimeout(()=>{this.setState({password1: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({password1: 'is-valid', password: value});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'password2') {\r\n            value = e.target.value\r\n            if (value !== this.state.password) {\r\n                setTimeout(()=>{this.setState({password2: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({password2: 'is-valid'});},5)\r\n            } \r\n        }\r\n        if (e.target.id === 'zip') {\r\n            patt = /[a-z,A-Z]+/gm\r\n            value = e.target.value\r\n            res = patt.test(value);\r\n            if (res === true || value === \"\") {\r\n                setTimeout(()=>{this.setState({zip: 'is-invalid'});},5)\r\n            }\r\n            else {\r\n                setTimeout(()=>{this.setState({zip: 'is-valid'});},5)\r\n            } \r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.finished ? \r\n                <Login/> : \r\n                <div  className='newacc'>\r\n               <form onSubmit={(e)=>{this.accountDetails(e)}}>\r\n                        <h3>Create new account</h3><br/>\r\n                        <span style={{color: 'red'}}>* required</span>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td><label htmlFor=\"firstName\" className=\"form-label\">First name *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.firstName} onChange={(e)=>{this.validate(e)}} id=\"firstName\" placeholder=\"Letters only\" required/></td>\r\n                                <td><label htmlFor=\"lastName\" className=\"form-label\">Last name *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.lastName} onChange={(e)=>{this.validate(e)}} id=\"lastName\" placeholder=\"Letters only\" required/></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><label htmlFor=\"email1\" className=\"form-label\">Email *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.email1} onChange={(e)=>{this.validate(e)}} id=\"email1\" required/></td>\r\n                                <td><label htmlFor=\"phone1\" className=\"form-label\">Phone *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.phone} onChange={(e)=>{this.validate(e)}} id=\"phone1\" placeholder=\"Digits only, at least 10 digits\" required/></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><label htmlFor=\"password1\" className=\"form-label\">Password *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.password1} onChange={(e)=>{this.validate(e)}} id=\"password1\" placeholder=\"At least 8 charachters\" required/></td>\r\n                                <td><label htmlFor=\"password2\" className=\"form-label\">Repeat password *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.password2} onChange={(e)=>{this.validate(e)}} id=\"password2\" placeholder=\"Your password should match\" required/></td>\r\n                            </tr>\r\n                            <tr>\r\n                            <td><label htmlFor=\"country\" className=\"form-label\">Country *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.country} onChange={(e)=>{this.validate(e)}} id=\"country\" placeholder=\"Letters only\" required/></td>\r\n                                <td><label htmlFor=\"city\" className=\"form-label\">City *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.city} onChange={(e)=>{this.validate(e)}} id=\"city\" placeholder=\"Letters only\" required/></td>\r\n                            </tr>\r\n                            <tr>\r\n                            <td><label htmlFor=\"address\" className=\"form-label\">Address *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.address} onChange={(e)=>{this.validate(e)}} id=\"address\" required/></td>\r\n                                <td><label htmlFor=\"zip\" className=\"form-label\">Zip *</label><br/>\r\n                                <input type=\"text\" className={\"form-control \"+this.state.zip} onChange={(e)=>{this.validate(e)}} id=\"zip\" placeholder=\"Digits only\" required/></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"subBtnNew\">\r\n                        <input type=\"submit\" className='payBtn' value=\"Submit\"/>\r\n                    </div>\r\n                    </form>\r\n                    </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Newaccount\r\n",["216","217"],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Paypal.jsx",["218","219"],"import React, { useRef, useEffect } from \"react\";\r\nexport default function Paypal() {\r\n\r\nconst totalF = JSON.parse(localStorage.getItem(\"total\"))\r\n\r\nlet items = JSON.parse(localStorage.getItem(\"cart\")).length\r\n\r\nlet orderId = 0\r\n\r\n  const paypal = useRef();\r\n\r\n  useEffect(() => {\r\n    window.paypal\r\n      .Buttons({\r\n        createOrder: (data, actions, err) => {\r\n          return actions.order.create({\r\n            intent: \"CAPTURE\",\r\n            purchase_units: [\r\n              {\r\n                description: \"Number of items: \" + items,\r\n                amount: {\r\n                  currency_code: \"USD\",\r\n                  value: totalF,\r\n                },\r\n              },\r\n            ],\r\n          });\r\n        },\r\n        onApprove: async (data, actions) => {\r\n          const order = await actions.order.capture();\r\n          localStorage.setItem(\"orderId\",JSON.stringify(order.id))\r\n        },\r\n        onError: (err) => {\r\n          localStorage.setItem(\"orderErr\",JSON.stringify(err))\r\n        },\r\n      })\r\n      .render(paypal.current);\r\n  }, []);\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <div ref={paypal}></div>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Success\\Success.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\WishList\\WishList.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Fail\\Fail.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Post\\Post.jsx",["220"],"import React, { Component } from 'react'\r\nimport './Post.css'\r\nimport axios from 'axios'\r\n\r\nexport class Post extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            i: 0,\r\n            blog: [],\r\n            comments: [],\r\n            count: 0\r\n        }\r\n        this.findIndex = this.findIndex.bind(this);\r\n        this.commentCount = this.commentCount.bind(this);\r\n        this.findIndex();\r\n        this.commentCount();\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.getBlog();\r\n        this.getComments();\r\n     }\r\n\r\n\r\n     \r\n     async getBlog() {\r\n     try {\r\n        const response = await axios.get('http://localhost:3000/blog');\r\n        this.setState({blog: response.data}, () => {\r\n           this.findIndex()\r\n        });        \r\n     } catch (error) {\r\n        console.error(error);\r\n     }\r\n     }\r\n\r\n     async getComments() {\r\n        try {\r\n           const response = await axios.get('http://localhost:3000/comments');\r\n           this.setState({comments: response.data}, () => {this.commentCount()});        \r\n        } catch (error) {\r\n           console.error(error);\r\n        }\r\n        }\r\n\r\n    findIndex () {\r\n        let i = 0;\r\n        for (const element of this.state.blog) {\r\n           if (this.props.match.params.postid == element.id)\r\n           {i = element.id - 1; }\r\n        }\r\n        setTimeout(()=>{this.setState({i})\r\n        this.commentCount();},5) \r\n     }\r\n\r\n     comment(e) {\r\n         e.preventDefault();\r\n         let comments = [...this.state.comments]\r\n         let postId = parseInt(this.props.match.params.postid)\r\n         let id = [...this.state.comments].length + 1\r\n         let name = e.target.childNodes[4].value\r\n         let date = new Date();\r\n         let dd = String(date.getDate()).padStart(2, '0');\r\n         let mm = String(date.getMonth() + 1).padStart(2, '0');\r\n         let yyyy = date.getFullYear();\r\n         date = dd + '/' + mm + '/' + yyyy;\r\n         let comment = e.target.childNodes[8].value\r\n         let commentObj = {postId:postId, id:id, name:name, date:date, comment:comment}\r\n         comments.push(commentObj)\r\n         axios.post('http://localhost:3000/comments', {\r\n             postId:postId,\r\n             id:id,\r\n             name:name,\r\n             date:date,\r\n             comment:comment})\r\n          .then(function (response) {\r\n            console.log(response);\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n         e.target.childNodes[4].value = \"\"\r\n         e.target.childNodes[8].value = \"\"\r\n         setTimeout(()=>{this.setState({comments});\r\n         this.commentCount()},5) \r\n     }\r\n\r\n     commentCount() {\r\n         let count = 0;\r\n         for (const element of this.state.comments) {\r\n             if (element.postId === (this.state.i + 1)) {\r\n                count++\r\n             }\r\n         }\r\n         setTimeout(()=>{this.setState({count})},5)\r\n\r\n     }\r\n\r\n    render() {\r\n        return (this.state.blog[this.state.i]) ? (\r\n            <div className=\"post1\">\r\n                <div className='postSec'>\r\n                    <h1>{this.state.blog[this.state.i].title}</h1>\r\n                    <span>{this.state.blog[this.state.i].name}</span><br/>\r\n                    <span>{this.state.blog[this.state.i].date}</span><br/>\r\n                    <p>{this.state.blog[this.state.i].content}</p>\r\n                    <img src={this.state.blog[this.state.i].src} alt=\"postImg\" width=\"250px\"/>\r\n                </div>\r\n                <div className='commentSec'>\r\n                    <span>{this.state.count} comments</span>\r\n                    <div>\r\n                    {this.state.comments.map((v)=> v.postId === (this.state.i + 1) ?\r\n                    <div key={v.id} className='singleComm'>\r\n                        <span>{v.name}</span><br/>\r\n                        <span>{v.date}</span>\r\n                        <p>{v.comment}</p>\r\n                    </div>\r\n                     : null)}\r\n                    </div>\r\n                    <h3>Comment: </h3>\r\n                    <form onSubmit={(e)=>this.comment(e)}>\r\n                        <span style={{color: 'red'}}>* required</span><br/>\r\n                        <label label htmlFor=\"name\">Name: *</label><br/>\r\n                        <input type=\"text\" id=\"name\" required/><br/>\r\n                        <label htmlFor=\"comment\">Comment: *</label><br/>\r\n                        <textarea id=\"comment\" name=\"comment\" rows=\"4\" cols=\"55\" required></textarea><br/>\r\n                        <input type=\"submit\" className='commentBtn' value=\"Submit\"/>\r\n                    </form>\r\n                </div>\r\n                \r\n            </div>\r\n        ) : (<div>Loading...</div>)\r\n    }\r\n}\r\n\r\nexport default Post\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Dashboard.jsx",["221","222","223"],"import React, {useState, useEffect} from 'react'\r\nimport { Card, Button, Alert } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from '../AuthContext'\r\nimport {db} from '../firebase'\r\n\r\nexport default function Dashboard() {\r\n    const [error, setError] = useState('')\r\n    const {currentUser, logout} = useAuth()\r\n    const history = useHistory()\r\n    const [users, setUsers] = useState([])\r\n    const [index, setIndex] = useState(-1)\r\n\r\n    useEffect(() => {\r\n        const ref = db.ref('users');\r\n        const listener = ref.on('value', snapshot => {\r\n            const fetchedUsers = [];\r\n            snapshot.forEach(childSnapshot => {\r\n                const data = childSnapshot.val();\r\n                fetchedUsers.push({ ...data });\r\n            });\r\n            setUsers(fetchedUsers);\r\n        });\r\n        users.forEach(element => {\r\n            if (element.email == currentUser.email) {\r\n                let index = users.findIndex((e) => { return e === element})\r\n                setIndex(index)\r\n            }\r\n        })\r\n        return () => ref.off('value', listener);\r\n    }, [db, users]);\r\n    \r\n    async function handleLogout() {\r\n        setError('')\r\n        try {\r\n            await logout()\r\n            history.push('/login')\r\n        }\r\n        catch {\r\n            setError('Faild to log out')\r\n        }\r\n    }\r\n    return (\r\n        \r\n<>\r\n{index !== -1 ? <>\r\n<Card style={{maxWidth: '400px', margin: '15px auto'}} className='d-flex justify-content-center'>\r\n    <Card.Body>\r\n    <h2 className='text-center mb-4 '>Profile</h2>\r\n    {error && <Alert variant='danger'>{error}</Alert>}\r\n    <strong>Email:</strong> {currentUser.email}<br/>\r\n    <strong>First Name:</strong> {users[index].firstName}<br/>\r\n    <strong>Last Name:</strong> {users[index].lastName}<br/>\r\n    <strong>Country:</strong> {users[index].country}<br/>\r\n    <strong>City:</strong> {users[index].city}<br/>\r\n    <strong>Address:</strong> {users[index].address}<br/>\r\n    <strong>Zip:</strong> {users[index].zip}<br/>\r\n    <strong>Photo:</strong><br/><img src={currentUser.photoURL ? currentUser.photoURL: '/img/anonymous.png'} alt='User Photo' width='200px'/>\r\n    <Link to=\"/update-profile\" className='btn btn-primary w-100 mt-3'>Update Profile</Link>\r\n    </Card.Body>\r\n</Card>\r\n<div className=\"w-100 text-center mt-2\">\r\n           <Button variant=\"link\" onClick={handleLogout}>Log Out</Button>\r\n        </div>\r\n        </> : <div>Loading...</div>}\r\n\r\n</>\r\n    )\r\n}\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Signup.jsx",["224","225","226","227"],"import React, {useRef, useState, useEffect} from 'react'\r\nimport {Form, Button, Card, Alert} from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from '../AuthContext'\r\nimport {db} from '../firebase'\r\n\r\nexport default function Signup() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const firstNameRef = useRef()\r\n    const lastNameRef = useRef()\r\n    const countryRef = useRef()\r\n    const cityRef = useRef()\r\n    const addressRef = useRef()\r\n    const zipRef = useRef()\r\n    const phoneRef = useRef()\r\n    const photoRef = useRef()\r\n    const {signup, userData} = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [id, setId] = useState(0)\r\n    const [users, setUsers] = useState([])\r\n    const history = useHistory()\r\n\r\n\r\n    useEffect(() => {\r\n        const ref = db.ref('users');\r\n        const listener = ref.on('value', snapshot => {\r\n            const fetchedUsers = [];\r\n            snapshot.forEach(childSnapshot => {\r\n                // const key = childSnapshot.key;\r\n                const data = childSnapshot.val();\r\n                fetchedUsers.push({ ...data });\r\n            });\r\n            setUsers(fetchedUsers);\r\n        });\r\n        return () => ref.off('value', listener);\r\n    }, [db]);\r\n\r\n    // useEffect(() => {\r\n    //  return db.ref('users').on('value', (snapshot)=>{if(snapshot.val()!=null)\r\n\r\n    //         setUsers(snapshot.val())\r\n    //       })\r\n          \r\n    // }, ()=>{console.log(users)})\r\n\r\n   async function handleSubmit(e) {\r\n       console.log(users)\r\n        e.preventDefault()\r\n        let id = users.length+2\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n        let firstName =  firstNameRef.current.value +\" \"+ lastNameRef.current.value\r\n        let email = emailRef.current.value\r\n        let country = countryRef.current.value\r\n        let city = cityRef.current.value\r\n        let address = addressRef.current.value\r\n        let zip = zipRef.current.value\r\n        let phone = phoneRef.current.value\r\n        db.ref('users/' + id).set({\r\n            id:id,\r\n            name: name,\r\n            address: address,\r\n            email: email,\r\n            country: country,\r\n            city: city,\r\n            zip: zip,\r\n            phone: phone,\r\n            role: 'custumer',\r\n            active: true,\r\n          });\r\n\r\n        try {\r\n            setError('')\r\n            setLoading(true)\r\n           await signup(emailRef.current.value, passwordRef.current.value)\r\n           history.push('/Dashboard')\r\n        }\r\n        catch {\r\n            setError('Faild to create an account')\r\n        }\r\n\r\n        setLoading(false)\r\n\r\n        \r\n         \r\n        \r\n        \r\n    }\r\n    return (\r\n        <>\r\n        <Card style={{maxWidth: '400px', margin: '15px auto'}} className='d-flex justify-content-center'>\r\n            <Card.Body>\r\n                <h2 className='text-center mb-4 '>Sign Up</h2>\r\n                {error && <Alert variant='danger'>{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id=\"email\" className='w-100 p-0'>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordRef} required placeholder=\"at least 6 characters\"/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password-confirm\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordConfirmRef} required placeholder=\"at least 6 characters\"/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"firstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type=\"text\" ref={firstNameRef} required/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"lastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type=\"text\" ref={lastNameRef} required/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"photo\">\r\n                        <Form.Label>Photo URL</Form.Label>\r\n                        <Form.Control type=\"text\" ref={photoRef}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"country\">\r\n                        <Form.Label>country</Form.Label>\r\n                        <Form.Control type=\"text\" ref={countryRef} required/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"city\">\r\n                        <Form.Label>city</Form.Label>\r\n                        <Form.Control type=\"text\" ref={cityRef} required/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"address\">\r\n                        <Form.Label>address</Form.Label>\r\n                        <Form.Control type=\"text\" ref={addressRef} required/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"zip\">\r\n                        <Form.Label>zip</Form.Label>\r\n                        <Form.Control type=\"text\" ref={zipRef} required/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"phone\">\r\n                        <Form.Label>phone</Form.Label>\r\n                        <Form.Control type=\"text\" ref={phoneRef} required/>\r\n                    </Form.Group>\r\n                    <Button disabled={loading} className='w-100 mt-2' type='submit'>Sign Up</Button>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center m-2\">\r\n            Already have an account? <Link to=\"login\" className='text-dark'>Log in</Link>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\PrivateRoute.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\ForgotPassword.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\Login.jsx",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\UpdateProfile.jsx",["228","229","230","231","232"],"import React, {useRef, useState, useEffect} from 'react'\r\nimport {Form, Button, Card, Alert} from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useAuth } from '../AuthContext'\r\nimport {db} from '../firebase'\r\n\r\nexport default function UpdateProfile() {\r\n    const emailRef = useRef()\r\n    const passwordRef = useRef()\r\n    const passwordConfirmRef = useRef()\r\n    const firstNameRef = useRef()\r\n    const lastNameRef = useRef()\r\n    const countryRef = useRef()\r\n    const cityRef = useRef()\r\n    const addressRef = useRef()\r\n    const zipRef = useRef()\r\n    const phoneRef = useRef()\r\n    const photoRef = useRef()\r\n    const {currentUser, updateEmail, updatePassword, userData} = useAuth()\r\n    const [error, setError] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [users, setUsers] = useState([])\r\n    const [id, setId] = useState(0)\r\n    const history = useHistory()\r\n    const [index, setIndex] = useState(-1)\r\n\r\n    useEffect(() => {\r\n        const ref = db.ref('users');\r\n        const listener = ref.on('value', snapshot => {\r\n            const fetchedUsers = [];\r\n            snapshot.forEach(childSnapshot => {\r\n                const data = childSnapshot.val();\r\n                fetchedUsers.push({ ...data });\r\n            });\r\n            setUsers(fetchedUsers);\r\n        });\r\n        users.forEach(element => {\r\n            if (element.email == currentUser.email) {\r\n                let index = users.findIndex((e) => { return e === element})\r\n                setIndex(index)\r\n            }\r\n        })\r\n        return () => ref.off('value', listener);\r\n    }, [db, users]);\r\n\r\n   function handleSubmit(e) {\r\n        e.preventDefault()\r\n        setLoading(true)\r\n        setError('')\r\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n            return setError('Passwords do not match')\r\n        }\r\n\r\n        const promises = []\r\n        const displayName = firstNameRef.current.value +\" \"+ lastNameRef.current.value\r\n\r\n        if (emailRef.current.value !== currentUser.email) {\r\n            promises.push(updateEmail(emailRef.current.value))\r\n        }\r\n        if (passwordRef.current.value) {\r\n            promises.push(updatePassword(passwordRef.current.value))\r\n        }\r\n        if (displayName !== currentUser.displayName) {\r\n            if (photoRef.current.value !== currentUser.photoURL)\r\n            promises.push(userData(displayName, photoRef.current.value))\r\n        }\r\n\r\n        let id = id\r\n         \r\n        db.ref('users/' + index).update({\r\n            firstName: firstNameRef.current.value !== \"\" ? firstNameRef.current.value : users[index].firstName,\r\n            lastName: lastNameRef.current.value !== \"\" ? lastNameRef.current.value : users[index].lastName,\r\n            email: emailRef.current.value !== \"\" ? emailRef.current.value : users[index].email,\r\n            country: countryRef.current.value !== \"\" ? countryRef.current.value : users[index].country,\r\n            city: cityRef.current.value !== \"\" ? cityRef.current.value : users[index].city,\r\n            zip: zipRef.current.value !== \"\" ? zipRef.current.value : users[index].zip,\r\n            phone: phoneRef.current.value !== \"\" ? phoneRef.current.value : users[index].phone,\r\n            role: 'custumer',\r\n            active: true,\r\n          });\r\n\r\n        Promise.all(promises).then(() => {\r\n            history.push('/')\r\n        }).catch(()=>{\r\n            setError('Faild to update profile')\r\n        }).finally(()=>{\r\n            setLoading(false)\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n        {index !== -1 ? <>\r\n        <Card style={{maxWidth: '400px', margin: '15px auto'}} className='d-flex justify-content-center'>\r\n            <Card.Body>\r\n                <h2 className='text-center mb-4 '>Update Profile</h2>\r\n                {error && <Alert variant='danger'>{error}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"email\" ref={emailRef} required defaultValue={currentUser.email}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordRef} placeholder=\"Leave blank to keep the same\"/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password-confirm\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type=\"password\" ref={passwordConfirmRef} placeholder=\"Leave blank to keep the same\"/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"firstName\">\r\n                        <Form.Label>First Name</Form.Label>\r\n                        <Form.Control type=\"text\" ref={firstNameRef} defaultValue={users[index].firstName}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"lastName\">\r\n                        <Form.Label>Last Name</Form.Label>\r\n                        <Form.Control type=\"text\" ref={lastNameRef} defaultValue={users[index].lastName}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"photo\">\r\n                        <Form.Label>Photo URL</Form.Label>\r\n                        <Form.Control type=\"text\" ref={photoRef} defaultValue={currentUser.photoURL}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"country\">\r\n                        <Form.Label>country</Form.Label>\r\n                        <Form.Control type=\"text\" ref={countryRef} defaultValue={users[index].country}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"city\">\r\n                        <Form.Label>city</Form.Label>\r\n                        <Form.Control type=\"text\" ref={cityRef} defaultValue={users[index].city}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"address\">\r\n                        <Form.Label>address</Form.Label>\r\n                        <Form.Control type=\"text\" ref={addressRef} defaultValue={users[index].address}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"zip\">\r\n                        <Form.Label>zip</Form.Label>\r\n                        <Form.Control type=\"text\" ref={zipRef} defaultValue={users[index].zip}/>\r\n                    </Form.Group>\r\n                    <Form.Group id=\"phone\">\r\n                        <Form.Label>phone</Form.Label>\r\n                        <Form.Control type=\"text\" ref={phoneRef} defaultValue={users[index].phone}/>\r\n                    </Form.Group>\r\n                    <Button disabled={loading} className='w-100' type='submit'>Update</Button>\r\n                </Form>\r\n            </Card.Body>\r\n        </Card>\r\n        <div className=\"w-100 text-center mt-2\">\r\n            <Link to=\"/\">Cancel</Link>\r\n            \r\n        </div>\r\n        </> : <div>Loading...</div>}\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\firebase.js",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\AuthContext.jsx",["233"],"import { address } from 'faker'\r\nimport React, { useContext, useState, useEffect } from 'react'\r\nimport { auth } from './firebase'\r\n\r\nconst AuthContext = React.createContext()\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext)\r\n}\r\n\r\nexport function AuthProvider({children}) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup (email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password)\r\n    }\r\n\r\n    function userData (displayName, photoURL) {\r\n        const user = auth.currentUser;\r\n        \r\n        if (user != null) {\r\n            return user.updateProfile({\r\n                displayName: displayName,\r\n                photoURL: photoURL\r\n              }).then(function() {\r\n                console.log(user.displayName)\r\n              }).catch(function(error) {\r\n               console.log(error)\r\n              });\r\n          }\r\n    }\r\n\r\n    function login(email,password) {\r\n        return auth.signInWithEmailAndPassword(email,password)\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut()\r\n        \r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email)\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email)\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user=>{\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n            \r\n        })\r\n        return unsubscribe\r\n    }, [])\r\n\r\n\r\n    const value = {\r\n        currentUser,\r\n        login,\r\n        signup,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword,\r\n        userData\r\n        \r\n    }\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n","C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\Administrator.jsx",["234","235"],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\users.js",[],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\posts.jsx",[],["236","237"],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\DataProvider.jsx",["238"],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\dataProvider.jsx",["239"],"C:\\Users\\Hadar\\Desktop\\FS\\finalProjectFrontend\\Final-project-front-end\\src\\components\\admin\\product.js",[],{"ruleId":"240","severity":1,"message":"241","line":36,"column":36,"nodeType":"242","messageId":"243","endLine":36,"endColumn":38},{"ruleId":"240","severity":1,"message":"241","line":39,"column":36,"nodeType":"242","messageId":"243","endLine":39,"endColumn":38},{"ruleId":"240","severity":1,"message":"241","line":42,"column":40,"nodeType":"242","messageId":"243","endLine":42,"endColumn":42},{"ruleId":"244","severity":1,"message":"245","line":49,"column":7,"nodeType":"246","messageId":"247","endLine":49,"endColumn":21},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","replacedBy":"251"},{"ruleId":"240","severity":1,"message":"241","line":82,"column":16,"nodeType":"242","messageId":"243","endLine":82,"endColumn":18},{"ruleId":"252","severity":1,"message":"253","line":171,"column":28,"nodeType":"254","messageId":"255","endLine":171,"endColumn":62},{"ruleId":"252","severity":1,"message":"253","line":177,"column":28,"nodeType":"254","messageId":"255","endLine":177,"endColumn":62},{"ruleId":"252","severity":1,"message":"253","line":183,"column":28,"nodeType":"254","messageId":"255","endLine":183,"endColumn":62},{"ruleId":"252","severity":1,"message":"253","line":190,"column":28,"nodeType":"254","messageId":"255","endLine":190,"endColumn":62},{"ruleId":"240","severity":1,"message":"241","line":194,"column":56,"nodeType":"242","messageId":"243","endLine":194,"endColumn":58},{"ruleId":"256","severity":1,"message":"257","line":24,"column":16,"nodeType":"258","endLine":24,"endColumn":99},{"ruleId":"256","severity":1,"message":"257","line":25,"column":16,"nodeType":"258","endLine":25,"endColumn":94},{"ruleId":"256","severity":1,"message":"257","line":26,"column":16,"nodeType":"258","endLine":26,"endColumn":100},{"ruleId":"240","severity":1,"message":"241","line":51,"column":48,"nodeType":"242","messageId":"243","endLine":51,"endColumn":50},{"ruleId":"240","severity":1,"message":"241","line":83,"column":16,"nodeType":"242","messageId":"243","endLine":83,"endColumn":18},{"ruleId":"240","severity":1,"message":"241","line":32,"column":31,"nodeType":"242","messageId":"243","endLine":32,"endColumn":33},{"ruleId":"240","severity":1,"message":"241","line":32,"column":60,"nodeType":"242","messageId":"243","endLine":32,"endColumn":62},{"ruleId":"259","severity":1,"message":"260","line":64,"column":17,"nodeType":"246","messageId":"261","endLine":64,"endColumn":21},{"ruleId":"259","severity":1,"message":"262","line":65,"column":17,"nodeType":"246","messageId":"261","endLine":65,"endColumn":22},{"ruleId":"259","severity":1,"message":"263","line":66,"column":17,"nodeType":"246","messageId":"261","endLine":66,"endColumn":20},{"ruleId":"259","severity":1,"message":"260","line":77,"column":17,"nodeType":"246","messageId":"261","endLine":77,"endColumn":21},{"ruleId":"259","severity":1,"message":"262","line":78,"column":17,"nodeType":"246","messageId":"261","endLine":78,"endColumn":22},{"ruleId":"259","severity":1,"message":"263","line":79,"column":17,"nodeType":"246","messageId":"261","endLine":79,"endColumn":20},{"ruleId":"259","severity":1,"message":"260","line":90,"column":17,"nodeType":"246","messageId":"261","endLine":90,"endColumn":21},{"ruleId":"259","severity":1,"message":"262","line":91,"column":17,"nodeType":"246","messageId":"261","endLine":91,"endColumn":22},{"ruleId":"259","severity":1,"message":"263","line":92,"column":17,"nodeType":"246","messageId":"261","endLine":92,"endColumn":20},{"ruleId":"259","severity":1,"message":"260","line":103,"column":17,"nodeType":"246","messageId":"261","endLine":103,"endColumn":21},{"ruleId":"259","severity":1,"message":"262","line":104,"column":17,"nodeType":"246","messageId":"261","endLine":104,"endColumn":22},{"ruleId":"259","severity":1,"message":"263","line":105,"column":17,"nodeType":"246","messageId":"261","endLine":105,"endColumn":20},{"ruleId":"259","severity":1,"message":"260","line":116,"column":17,"nodeType":"246","messageId":"261","endLine":116,"endColumn":21},{"ruleId":"259","severity":1,"message":"262","line":117,"column":17,"nodeType":"246","messageId":"261","endLine":117,"endColumn":22},{"ruleId":"259","severity":1,"message":"263","line":118,"column":17,"nodeType":"246","messageId":"261","endLine":118,"endColumn":20},{"ruleId":"259","severity":1,"message":"260","line":137,"column":17,"nodeType":"246","messageId":"261","endLine":137,"endColumn":21},{"ruleId":"259","severity":1,"message":"262","line":138,"column":17,"nodeType":"246","messageId":"261","endLine":138,"endColumn":22},{"ruleId":"259","severity":1,"message":"263","line":139,"column":17,"nodeType":"246","messageId":"261","endLine":139,"endColumn":20},{"ruleId":"244","severity":1,"message":"264","line":2,"column":8,"nodeType":"246","messageId":"247","endLine":2,"endColumn":17},{"ruleId":"248","replacedBy":"265"},{"ruleId":"250","replacedBy":"266"},{"ruleId":"244","severity":1,"message":"267","line":8,"column":5,"nodeType":"246","messageId":"247","endLine":8,"endColumn":12},{"ruleId":"268","severity":1,"message":"269","line":38,"column":6,"nodeType":"270","endLine":38,"endColumn":8,"suggestions":"271"},{"ruleId":"240","severity":1,"message":"241","line":50,"column":47,"nodeType":"242","messageId":"243","endLine":50,"endColumn":49},{"ruleId":"240","severity":1,"message":"241","line":25,"column":31,"nodeType":"242","messageId":"243","endLine":25,"endColumn":33},{"ruleId":"268","severity":1,"message":"272","line":31,"column":8,"nodeType":"270","endLine":31,"endColumn":19,"suggestions":"273"},{"ruleId":"274","severity":1,"message":"275","line":58,"column":33,"nodeType":"258","endLine":58,"endColumn":142},{"ruleId":"244","severity":1,"message":"276","line":19,"column":20,"nodeType":"246","messageId":"247","endLine":19,"endColumn":28},{"ruleId":"244","severity":1,"message":"277","line":22,"column":12,"nodeType":"246","messageId":"247","endLine":22,"endColumn":14},{"ruleId":"244","severity":1,"message":"278","line":22,"column":16,"nodeType":"246","messageId":"247","endLine":22,"endColumn":21},{"ruleId":"268","severity":1,"message":"279","line":39,"column":8,"nodeType":"270","endLine":39,"endColumn":12,"suggestions":"280"},{"ruleId":"244","severity":1,"message":"277","line":23,"column":12,"nodeType":"246","messageId":"247","endLine":23,"endColumn":14},{"ruleId":"244","severity":1,"message":"278","line":23,"column":16,"nodeType":"246","messageId":"247","endLine":23,"endColumn":21},{"ruleId":"240","severity":1,"message":"241","line":38,"column":31,"nodeType":"242","messageId":"243","endLine":38,"endColumn":33},{"ruleId":"268","severity":1,"message":"272","line":44,"column":8,"nodeType":"270","endLine":44,"endColumn":19,"suggestions":"281"},{"ruleId":"282","severity":1,"message":"283","line":68,"column":18,"nodeType":"246","messageId":"284","endLine":68,"endColumn":20},{"ruleId":"244","severity":1,"message":"285","line":1,"column":10,"nodeType":"246","messageId":"247","endLine":1,"endColumn":17},{"ruleId":"244","severity":1,"message":"286","line":3,"column":8,"nodeType":"246","messageId":"247","endLine":3,"endColumn":26},{"ruleId":"244","severity":1,"message":"287","line":8,"column":5,"nodeType":"246","messageId":"247","endLine":8,"endColumn":25},{"ruleId":"248","replacedBy":"288"},{"ruleId":"250","replacedBy":"289"},{"ruleId":"290","severity":1,"message":"291","line":7,"column":1,"nodeType":"292","endLine":94,"endColumn":3},{"ruleId":"290","severity":1,"message":"291","line":7,"column":1,"nodeType":"292","endLine":94,"endColumn":3},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'amountfunction' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["293"],"no-negated-in-lhs",["294"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'display'.","ArrowFunctionExpression","unsafeRefs","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-redeclare","'patt' is already defined.","redeclared","'value' is already defined.","'res' is already defined.","'PropTypes' is defined but never used.",["293"],["294"],"'orderId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'items' and 'totalF'. Either include them or remove the dependency array.","ArrayExpression",["295"],"React Hook useEffect has a missing dependency: 'currentUser.email'. Either include it or remove the dependency array. Outer scope values like 'db' aren't valid dependencies because mutating them doesn't re-render the component.",["296"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'userData' is assigned a value but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'db'. Either exclude it or remove the dependency array. Outer scope values like 'db' aren't valid dependencies because mutating them doesn't re-render the component.",["297"],["298"],"no-use-before-define","'id' was used before it was defined.","usedBeforeDefined","'address' is defined but never used.","'jsonServerProvider' is defined but never used.","'FirebaseRealTimeSaga' is defined but never used.",["293"],["294"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"301","fix":"305"},"Update the dependencies array to be: [items, totalF]",{"range":"306","text":"307"},"Update the dependencies array to be: [currentUser.email, users]",{"range":"308","text":"309"},"Update the dependencies array to be: []",{"range":"310","text":"311"},{"range":"312","text":"309"},[1065,1067],"[items, totalF]",[1142,1153],"[currentUser.email, users]",[1379,1383],"[]",[1639,1650]]